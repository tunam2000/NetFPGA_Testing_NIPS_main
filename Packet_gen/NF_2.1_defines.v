
`ifndef _NF21_DEFINES_
 `define _NF21_DEFINES_ 1

 /* Common Functions */
`define LOG2_FUNC \
function integer log2; \
      input integer number; \
      begin \
         log2=0; \
         while(2**log2<number) begin \
            log2=log2+1; \
         end \
      end \
endfunction

`define CEILDIV_FUNC \
function integer ceildiv; \
      input integer num; \
      input integer divisor; \
      begin \
         if (num <= divisor) \
           ceildiv = 1; \
         else begin \
            ceildiv = num / divisor; \
            if (ceildiv * divisor < num) \
              ceildiv = ceildiv + 1; \
         end \
      end \
endfunction


 `define CPCI_NF2_ADDR_WIDTH `CPCI_CNET_ADDR_WIDTH
 `define CPCI_NF2_DATA_WIDTH `CPCI_CNET_DATA_WIDTH

 // clock persiod of 125MHz clock in ns
 `define FAST_CLOCK_PERIOD 8
 // clock persiod of 62.5MHz clock in ns
 `define SLOW_CLOCK_PERIOD 16


 `define IO_QUEUE_STAGE_NUM   8'hff

 `define IOQ_BYTE_LEN_POS     0
 `define IOQ_SRC_PORT_POS     16
 `define IOQ_WORD_LEN_POS     32
 `define IOQ_DST_PORT_POS     48


 /**********************************************************
  * To add a register, 4 things need to be specified:
  * 1- block size, and block address
  * 2- Internal addresses used by the module internally
  * 3- External addresses to be used by test scripts
  * 4- Add the regs to the display command to easily get addresses
  **********************************************************/

 /**********************************************************
  * The address space is divided into mutliple classes:
  *
  * At the top level:
  *      - 1   block of address width 22 bits (core)
  *      - 1   block of address width 22 bits (sram)
  *      - 1   block of address width 23 bits (udp)
  *      - 1   block of address width 24 bits (dram)
  *
  * Within the core group:
  *      - 4   blocks of address width 20 bits
  *
  * Within the 2nd core group block:
  *      - 16  blocks of address width 16 bits
  **********************************************************/

 `define NF2_BASE_ADDR                    32'h0010_0000

/*********** THESE ARE ALL WORD ADDRESSES (note the <<2 when printing external addresses) ***********/
 
 // --- Define address ranges
 // 4 bits to identify blocks of size 64k words
 `define BLOCK_SIZE_64k_BLOCK_ADDR_WIDTH   4
 `define BLOCK_SIZE_64k_REG_ADDR_WIDTH     16

 // 2 bits to identify blocks of size 1M words
 `define BLOCK_SIZE_1M_BLOCK_ADDR_WIDTH  2
 `define BLOCK_SIZE_1M_REG_ADDR_WIDTH    20

 // 1 bit to identify blocks of size 4M words
 `define BLOCK_SIZE_4M_BLOCK_ADDR_WIDTH  1
 `define BLOCK_SIZE_4M_REG_ADDR_WIDTH    22

 // 1 bit to identify blocks of size 8M words
 `define BLOCK_SIZE_8M_BLOCK_ADDR_WIDTH  1
 `define BLOCK_SIZE_8M_REG_ADDR_WIDTH    23

 // 1 bit to identify blocks of size 16M words
 `define BLOCK_SIZE_16M_BLOCK_ADDR_WIDTH  1
 `define BLOCK_SIZE_16M_REG_ADDR_WIDTH    24

 // --- Block register addresses
 `define CORE_BLOCK_ADDR_WIDTH            `BLOCK_SIZE_4M_BLOCK_ADDR_WIDTH
 `define CORE_REG_ADDR_WIDTH              `BLOCK_SIZE_4M_REG_ADDR_WIDTH
 `define CORE_BLOCK_ADDR                  `CORE_BLOCK_ADDR_WIDTH'h0

 `define SRAM_BLOCK_ADDR_WIDTH            `BLOCK_SIZE_4M_BLOCK_ADDR_WIDTH
 `define SRAM_REG_ADDR_WIDTH              `BLOCK_SIZE_4M_REG_ADDR_WIDTH
 `define SRAM_BLOCK_ADDR                  `SRAM_BLOCK_ADDR_WIDTH'h1

 `define UDP_BLOCK_ADDR_WIDTH             `BLOCK_SIZE_8M_BLOCK_ADDR_WIDTH
 `define UDP_REG_ADDR_WIDTH               `BLOCK_SIZE_8M_REG_ADDR_WIDTH
 `define UDP_BLOCK_ADDR                   `UDP_BLOCK_ADDR_WIDTH'h1

 `define DRAM_BLOCK_ADDR_WIDTH            `BLOCK_SIZE_16M_BLOCK_ADDR_WIDTH
 `define DRAM_REG_ADDR_WIDTH              `BLOCK_SIZE_16M_REG_ADDR_WIDTH
 `define DRAM_BLOCK_ADDR                  `DRAM_BLOCK_ADDR_WIDTH'h1


 `define DEV_ID_BLOCK_ADDR_WIDTH          `BLOCK_SIZE_64k_BLOCK_ADDR_WIDTH
 `define DEV_ID_REG_ADDR_WIDTH            `BLOCK_SIZE_64k_REG_ADDR_WIDTH
 `define DEV_ID_BLOCK_ADDR                `DEV_ID_BLOCK_ADDR_WIDTH'h0

 `define DMA_BLOCK_ADDR_WIDTH             `BLOCK_SIZE_64k_BLOCK_ADDR_WIDTH
 `define DMA_REG_ADDR_WIDTH               `BLOCK_SIZE_64k_REG_ADDR_WIDTH
 `define DMA_BLOCK_ADDR                   `DMA_BLOCK_ADDR_WIDTH'h2

 `define MDIO_BLOCK_ADDR_WIDTH            `BLOCK_SIZE_64k_BLOCK_ADDR_WIDTH
 `define MDIO_REG_ADDR_WIDTH              `BLOCK_SIZE_64k_REG_ADDR_WIDTH
 `define MDIO_BLOCK_ADDR                  `MDIO_BLOCK_ADDR_WIDTH'h3

 `define MAC_GRP_BLOCK_ADDR_WIDTH         `BLOCK_SIZE_64k_BLOCK_ADDR_WIDTH
 `define MAC_GRP_REG_ADDR_WIDTH           `BLOCK_SIZE_64k_REG_ADDR_WIDTH
 `define MAC_GRP_0_BLOCK_ADDR             `MAC_GRP_BLOCK_ADDR_WIDTH'h8
 `define MAC_GRP_1_BLOCK_ADDR             `MAC_GRP_BLOCK_ADDR_WIDTH'h9
 `define MAC_GRP_2_BLOCK_ADDR             `MAC_GRP_BLOCK_ADDR_WIDTH'hA
 `define MAC_GRP_3_BLOCK_ADDR             `MAC_GRP_BLOCK_ADDR_WIDTH'hB


 `define CPU_QUEUE_BLOCK_ADDR_WIDTH       `BLOCK_SIZE_64k_BLOCK_ADDR_WIDTH
 `define CPU_QUEUE_REG_ADDR_WIDTH         `BLOCK_SIZE_64k_REG_ADDR_WIDTH
 `define CPU_QUEUE_0_BLOCK_ADDR           `CPU_QUEUE_BLOCK_ADDR_WIDTH'hC
 `define CPU_QUEUE_1_BLOCK_ADDR           `CPU_QUEUE_BLOCK_ADDR_WIDTH'hD
 `define CPU_QUEUE_2_BLOCK_ADDR           `CPU_QUEUE_BLOCK_ADDR_WIDTH'hE
 `define CPU_QUEUE_3_BLOCK_ADDR           `CPU_QUEUE_BLOCK_ADDR_WIDTH'hF

 `define COUNTER_BLOCK_ADDR_WIDTH         `BLOCK_SIZE_64k_BLOCK_ADDR_WIDTH
 `define COUNTER_REG_ADDR_WIDTH           `BLOCK_SIZE_64k_REG_ADDR_WIDTH
 `define COUNTER_BLOCK_ADDR               `COUNTER_BLOCK_ADDR_WIDTH'h4
 // 1- add additional blocks here

 // Selftest blocks
 // Note: In the second 4MB block
 `define SRAM_LSB_BLOCK_ADDR_WIDTH        1
 `define SRAM_LSB_REG_ADDR_WIDTH          (`BLOCK_SIZE_4M_REG_ADDR_WIDTH - 1)

 `define SRAM_LSB_1_BLOCK_ADDR            `SRAM_LSB_BLOCK_ADDR_WIDTH'h0
 `define SRAM_LSB_2_BLOCK_ADDR            `SRAM_LSB_BLOCK_ADDR_WIDTH'h1

 `define REG_FILE_BLOCK_ADDR_WIDTH   	  `BLOCK_SIZE_64k_BLOCK_ADDR_WIDTH
 `define REG_FILE_REG_ADDR_WIDTH     	  `BLOCK_SIZE_64k_REG_ADDR_WIDTH
 `define REG_FILE_BLOCK_ADDR         	  `REG_FILE_BLOCK_ADDR_WIDTH'h0

 `define REG_REFLECT_TEST_BLOCK_ADDR_WIDTH `BLOCK_SIZE_64k_BLOCK_ADDR_WIDTH
 `define REG_REFLECT_TEST_REG_ADDR_WIDTH   `BLOCK_SIZE_64k_REG_ADDR_WIDTH
 `define REG_REFLECT_TEST_BLOCK_ADDR       `REG_REFLECT_TEST_BLOCK_ADDR_WIDTH'h1

 `define CLK_TEST_BLOCK_ADDR_WIDTH     	  `BLOCK_SIZE_64k_BLOCK_ADDR_WIDTH
 `define CLK_TEST_REG_ADDR_WIDTH       	  `BLOCK_SIZE_64k_REG_ADDR_WIDTH
 `define CLK_TEST_BLOCK_ADDR           	  `CLK_TEST_BLOCK_ADDR_WIDTH'h2

 `define SERIAL_TEST_BLOCK_ADDR_WIDTH     `BLOCK_SIZE_64k_BLOCK_ADDR_WIDTH
 `define SERIAL_TEST_REG_ADDR_WIDTH       `BLOCK_SIZE_64k_REG_ADDR_WIDTH
 `define SERIAL_TEST_BLOCK_ADDR           `SERIAL_TEST_BLOCK_ADDR_WIDTH'h3

 `define SRAM_TEST_BLOCK_ADDR_WIDTH       `BLOCK_SIZE_64k_BLOCK_ADDR_WIDTH
 `define SRAM_TEST_REG_ADDR_WIDTH         `BLOCK_SIZE_64k_REG_ADDR_WIDTH
 `define SRAM_TEST_BLOCK_ADDR             `SRAM_TEST_BLOCK_ADDR_WIDTH'h4

 `define SRAM_MSB_BLOCK_ADDR_WIDTH        `BLOCK_SIZE_64k_BLOCK_ADDR_WIDTH
 `define SRAM_MSB_REG_ADDR_WIDTH          `BLOCK_SIZE_64k_REG_ADDR_WIDTH
 `define SRAM_MSB_BLOCK_ADDR              `SRAM_MSB_BLOCK_ADDR_WIDTH'h5

 `define DRAM_TEST_BLOCK_ADDR_WIDTH       `BLOCK_SIZE_64k_BLOCK_ADDR_WIDTH
 `define DRAM_TEST_REG_ADDR_WIDTH         `BLOCK_SIZE_64k_REG_ADDR_WIDTH
 `define DRAM_TEST_BLOCK_ADDR             `DRAM_TEST_BLOCK_ADDR_WIDTH'h6

 `define PHY_TEST_BLOCK_ADDR_WIDTH     	  `BLOCK_SIZE_64k_BLOCK_ADDR_WIDTH
 `define PHY_TEST_REG_ADDR_WIDTH       	  `BLOCK_SIZE_64k_REG_ADDR_WIDTH
 `define PHY_TEST_BLOCK_ADDR           	  `CLK_TEST_BLOCK_ADDR_WIDTH'h7

 /*******************************************************************
  -- Internal addresses -- these are used inside the modules
  *******************************************************************/

 // Device ID addresses
 `define DEV_ID_MD5_1                    `DEV_ID_REG_ADDR_WIDTH'h0
 `define DEV_ID_MD5_2                    `DEV_ID_REG_ADDR_WIDTH'h1
 `define DEV_ID_MD5_3                    `DEV_ID_REG_ADDR_WIDTH'h2
 `define DEV_ID_MD5_4                    `DEV_ID_REG_ADDR_WIDTH'h3
 `define DEV_ID_LOCN                     `DEV_ID_REG_ADDR_WIDTH'h4
 `define DEV_REVISION_LOCN               `DEV_ID_REG_ADDR_WIDTH'h5
 `define DEV_CPCI_ID_LOCN                `DEV_ID_REG_ADDR_WIDTH'h6
 `define DEV_STR_LOCN                    `DEV_ID_REG_ADDR_WIDTH'h7

 // This is the MD5 sum of the string "device_id.v"
 // Used to identify if the design really does have a device_id block ;-)
 `define DEV_ID_MD5_1_VAL                32'h 4071736d
 `define DEV_ID_MD5_2_VAL                32'h 8a603d2b
 `define DEV_ID_MD5_3_VAL                32'h 4d55f629
 `define DEV_ID_MD5_4_VAL                32'h 89a73c95

 // MAC group addresses
 `define MAC_GRP_CONTROL                 `MAC_GRP_REG_ADDR_WIDTH'h0
 // +-- rx_queues internal addresses
 `define RX_QUEUE_NUM_PKTS_STORED        `MAC_GRP_REG_ADDR_WIDTH'h1
 `define RX_QUEUE_NUM_PKTS_DROPPED_FULL  `MAC_GRP_REG_ADDR_WIDTH'h2
 `define RX_QUEUE_NUM_PKTS_DROPPED_BAD   `MAC_GRP_REG_ADDR_WIDTH'h3
 `define RX_QUEUE_NUM_WORDS_PUSHED       `MAC_GRP_REG_ADDR_WIDTH'h4
 `define RX_QUEUE_NUM_BYTES_PUSHED       `MAC_GRP_REG_ADDR_WIDTH'h5
 `define RX_QUEUE_NUM_PKTS_DEQUEUED      `MAC_GRP_REG_ADDR_WIDTH'hb
 `define RX_QUEUE_NUM_PKTS_IN_QUEUE      `MAC_GRP_REG_ADDR_WIDTH'hc
 /** TO DO 1 **/

  // My group here
  
 // +-- tx queues internal addresses
 `define TX_QUEUE_NUM_PKTS_IN_QUEUE      `MAC_GRP_REG_ADDR_WIDTH'h6
 `define TX_QUEUE_NUM_PKTS_SENT          `MAC_GRP_REG_ADDR_WIDTH'h7
 `define TX_QUEUE_NUM_WORDS_PUSHED       `MAC_GRP_REG_ADDR_WIDTH'h8
 `define TX_QUEUE_NUM_BYTES_PUSHED       `MAC_GRP_REG_ADDR_WIDTH'h9
 `define TX_QUEUE_NUM_PKTS_ENQUEUED      `MAC_GRP_REG_ADDR_WIDTH'ha
  
 `define TX_QUEUE_DISABLE_BIT_NUM        0
 `define RX_QUEUE_DISABLE_BIT_NUM        1
 `define RESET_MAC_BIT_NUM               2
 `define MAC_DISABLE_TX_BIT_NUM          3
 `define MAC_DISABLE_RX_BIT_NUM          4
 `define MAC_DIS_JUMBO_TX_BIT_NUM        5
 `define MAC_DIS_JUMBO_RX_BIT_NUM        6
 `define MAC_DIS_CRC_CHECK               7
 `define MAC_DIS_CRC_GEN                 8

 // CPU register addresses
 `define CPU_REG_Q_WR_DATA_WORD          `CPU_QUEUE_REG_ADDR_WIDTH'h0
 `define CPU_REG_Q_WR_CTRL_WORD          `CPU_QUEUE_REG_ADDR_WIDTH'h1
 `define CPU_REG_Q_WR_NUM_WORDS_LEFT     `CPU_QUEUE_REG_ADDR_WIDTH'h2
 `define CPU_REG_Q_WR_NUM_PKTS_IN_Q      `CPU_QUEUE_REG_ADDR_WIDTH'h3
 `define CPU_REG_Q_RD_DATA_WORD          `CPU_QUEUE_REG_ADDR_WIDTH'h4
 `define CPU_REG_Q_RD_CTRL_WORD          `CPU_QUEUE_REG_ADDR_WIDTH'h5
 `define CPU_REG_Q_RD_NUM_WORDS_AVAIL    `CPU_QUEUE_REG_ADDR_WIDTH'h6
 `define CPU_REG_Q_RD_NUM_PKTS_IN_Q      `CPU_QUEUE_REG_ADDR_WIDTH'h7
 `define CPU_REG_Q_RX_NUM_PKTS_RCVD      `CPU_QUEUE_REG_ADDR_WIDTH'h8
 `define CPU_REG_Q_TX_NUM_PKTS_SENT      `CPU_QUEUE_REG_ADDR_WIDTH'h9
 `define CPU_REG_Q_RX_NUM_WORDS_RCVD     `CPU_QUEUE_REG_ADDR_WIDTH'ha
 `define CPU_REG_Q_TX_NUM_WORDS_SENT     `CPU_QUEUE_REG_ADDR_WIDTH'hb
 `define CPU_REG_Q_RX_NUM_BYTES_RCVD     `CPU_QUEUE_REG_ADDR_WIDTH'hc
 `define CPU_REG_Q_TX_NUM_BYTES_SENT     `CPU_QUEUE_REG_ADDR_WIDTH'hd

 // UDP Addresses
 // none here. They are specified in udp_defines.v

 // DMA block register addresses
 `define DMA_TX_QUE_0                    `DMA_REG_ADDR_WIDTH'h 00
 `define DMA_TX_QUE_0_LAST_1_BYTE        `DMA_REG_ADDR_WIDTH'h 01
 `define DMA_TX_QUE_0_LAST_2_BYTE        `DMA_REG_ADDR_WIDTH'h 02
 `define DMA_TX_QUE_0_LAST_3_BYTE        `DMA_REG_ADDR_WIDTH'h 03
 `define DMA_TX_QUE_0_LAST_4_BYTE        `DMA_REG_ADDR_WIDTH'h 04

 `define DMA_TX_QUE_1                    `DMA_REG_ADDR_WIDTH'h 10
 `define DMA_TX_QUE_1_LAST_1_BYTE        `DMA_REG_ADDR_WIDTH'h 11
 `define DMA_TX_QUE_1_LAST_2_BYTE        `DMA_REG_ADDR_WIDTH'h 12
 `define DMA_TX_QUE_1_LAST_3_BYTE        `DMA_REG_ADDR_WIDTH'h 13
 `define DMA_TX_QUE_1_LAST_4_BYTE        `DMA_REG_ADDR_WIDTH'h 14

 `define DMA_TX_QUE_2                    `DMA_REG_ADDR_WIDTH'h 20
 `define DMA_TX_QUE_2_LAST_1_BYTE        `DMA_REG_ADDR_WIDTH'h 21
 `define DMA_TX_QUE_2_LAST_2_BYTE        `DMA_REG_ADDR_WIDTH'h 22
 `define DMA_TX_QUE_2_LAST_3_BYTE        `DMA_REG_ADDR_WIDTH'h 23
 `define DMA_TX_QUE_2_LAST_4_BYTE        `DMA_REG_ADDR_WIDTH'h 24

 `define DMA_TX_QUE_3                    `DMA_REG_ADDR_WIDTH'h 30
 `define DMA_TX_QUE_3_LAST_1_BYTE        `DMA_REG_ADDR_WIDTH'h 31
 `define DMA_TX_QUE_3_LAST_2_BYTE        `DMA_REG_ADDR_WIDTH'h 32
 `define DMA_TX_QUE_3_LAST_3_BYTE        `DMA_REG_ADDR_WIDTH'h 33
 `define DMA_TX_QUE_3_LAST_4_BYTE        `DMA_REG_ADDR_WIDTH'h 34

 // PHY MDIO register addresses
 `define MDIO_0_CONTROL                  `MDIO_REG_ADDR_WIDTH'h0
 `define MDIO_0_STATUS                   `MDIO_REG_ADDR_WIDTH'h1
 `define MDIO_0_PHY_ID_0                 `MDIO_REG_ADDR_WIDTH'h2
 `define MDIO_0_PHY_ID_1                 `MDIO_REG_ADDR_WIDTH'h3
 `define MDIO_0_AUTONEGOTIATION_ADVERT   `MDIO_REG_ADDR_WIDTH'h4
 `define MDIO_0_AUTONEG_LINK_PARTNER_BASE_PAGE_ABILITY `MDIO_REG_ADDR_WIDTH'h5
 `define MDIO_0_AUTONEG_EXPANSION        `MDIO_REG_ADDR_WIDTH'h6
 `define MDIO_0_AUTONEG_NEXT_PAGE_TX     `MDIO_REG_ADDR_WIDTH'h7
 `define MDIO_0_AUTONEG_LINK_PARTNER_RCVD_NEXT_PAGE    `MDIO_REG_ADDR_WIDTH'h8
 `define MDIO_0_MASTER_SLAVE_CTRL        `MDIO_REG_ADDR_WIDTH'h9
 `define MDIO_0_MASTER_SLAVE_STATUS      `MDIO_REG_ADDR_WIDTH'ha
 `define MDIO_0_PSE_CTRL                 `MDIO_REG_ADDR_WIDTH'hb
 `define MDIO_0_PSE_STATUS               `MDIO_REG_ADDR_WIDTH'hc
 `define MDIO_0_MMD_ACCESS_CTRL          `MDIO_REG_ADDR_WIDTH'hd
 `define MDIO_0_MMD_ACCESS_STATUS        `MDIO_REG_ADDR_WIDTH'he
 `define MDIO_0_EXTENDED_STATUS          `MDIO_REG_ADDR_WIDTH'hf

 `define MDIO_1_CONTROL                  `MDIO_REG_ADDR_WIDTH'h20
 `define MDIO_1_STATUS                   `MDIO_REG_ADDR_WIDTH'h21
 `define MDIO_1_PHY_ID_0                 `MDIO_REG_ADDR_WIDTH'h22
 `define MDIO_1_PHY_ID_1                 `MDIO_REG_ADDR_WIDTH'h23
 `define MDIO_1_AUTONEGOTIATION_ADVERT   `MDIO_REG_ADDR_WIDTH'h24
 `define MDIO_1_AUTONEG_LINK_PARTNER_BASE_PAGE_ABILITY `MDIO_REG_ADDR_WIDTH'h25
 `define MDIO_1_AUTONEG_EXPANSION        `MDIO_REG_ADDR_WIDTH'h26
 `define MDIO_1_AUTONEG_NEXT_PAGE_TX     `MDIO_REG_ADDR_WIDTH'h27
 `define MDIO_1_AUTONEG_LINK_PARTNER_RCVD_NEXT_PAGE    `MDIO_REG_ADDR_WIDTH'h28
 `define MDIO_1_MASTER_SLAVE_CTRL        `MDIO_REG_ADDR_WIDTH'h29
 `define MDIO_1_MASTER_SLAVE_STATUS      `MDIO_REG_ADDR_WIDTH'h2a
 `define MDIO_1_PSE_CTRL                 `MDIO_REG_ADDR_WIDTH'h2b
 `define MDIO_1_PSE_STATUS               `MDIO_REG_ADDR_WIDTH'h2c
 `define MDIO_1_MMD_ACCESS_CTRL          `MDIO_REG_ADDR_WIDTH'h2d
 `define MDIO_1_MMD_ACCESS_STATUS        `MDIO_REG_ADDR_WIDTH'h2e
 `define MDIO_1_EXTENDED_STATUS          `MDIO_REG_ADDR_WIDTH'h2f

 `define MDIO_2_CONTROL                  `MDIO_REG_ADDR_WIDTH'h40
 `define MDIO_2_STATUS                   `MDIO_REG_ADDR_WIDTH'h41
 `define MDIO_2_PHY_ID_0                 `MDIO_REG_ADDR_WIDTH'h42
 `define MDIO_2_PHY_ID_1                 `MDIO_REG_ADDR_WIDTH'h43
 `define MDIO_2_AUTONEGOTIATION_ADVERT   `MDIO_REG_ADDR_WIDTH'h44
 `define MDIO_2_AUTONEG_LINK_PARTNER_BASE_PAGE_ABILITY `MDIO_REG_ADDR_WIDTH'h45
 `define MDIO_2_AUTONEG_EXPANSION        `MDIO_REG_ADDR_WIDTH'h46
 `define MDIO_2_AUTONEG_NEXT_PAGE_TX     `MDIO_REG_ADDR_WIDTH'h47
 `define MDIO_2_AUTONEG_LINK_PARTNER_RCVD_NEXT_PAGE    `MDIO_REG_ADDR_WIDTH'h48
 `define MDIO_2_MASTER_SLAVE_CTRL        `MDIO_REG_ADDR_WIDTH'h49
 `define MDIO_2_MASTER_SLAVE_STATUS      `MDIO_REG_ADDR_WIDTH'h4a
 `define MDIO_2_PSE_CTRL                 `MDIO_REG_ADDR_WIDTH'h4b
 `define MDIO_2_PSE_STATUS               `MDIO_REG_ADDR_WIDTH'h4c
 `define MDIO_2_MMD_ACCESS_CTRL          `MDIO_REG_ADDR_WIDTH'h4d
 `define MDIO_2_MMD_ACCESS_STATUS        `MDIO_REG_ADDR_WIDTH'h4e
 `define MDIO_2_EXTENDED_STATUS          `MDIO_REG_ADDR_WIDTH'h4f

 `define MDIO_3_CONTROL                  `MDIO_REG_ADDR_WIDTH'h60
 `define MDIO_3_STATUS                   `MDIO_REG_ADDR_WIDTH'h61
 `define MDIO_3_PHY_ID_0                 `MDIO_REG_ADDR_WIDTH'h62
 `define MDIO_3_PHY_ID_1                 `MDIO_REG_ADDR_WIDTH'h63
 `define MDIO_3_AUTONEGOTIATION_ADVERT   `MDIO_REG_ADDR_WIDTH'h64
 `define MDIO_3_AUTONEG_LINK_PARTNER_BASE_PAGE_ABILITY `MDIO_REG_ADDR_WIDTH'h65
 `define MDIO_3_AUTONEG_EXPANSION        `MDIO_REG_ADDR_WIDTH'h66
 `define MDIO_3_AUTONEG_NEXT_PAGE_TX     `MDIO_REG_ADDR_WIDTH'h67
 `define MDIO_3_AUTONEG_LINK_PARTNER_RCVD_NEXT_PAGE    `MDIO_REG_ADDR_WIDTH'h68
 `define MDIO_3_MASTER_SLAVE_CTRL        `MDIO_REG_ADDR_WIDTH'h69
 `define MDIO_3_MASTER_SLAVE_STATUS      `MDIO_REG_ADDR_WIDTH'h6a
 `define MDIO_3_PSE_CTRL                 `MDIO_REG_ADDR_WIDTH'h6b
 `define MDIO_3_PSE_STATUS               `MDIO_REG_ADDR_WIDTH'h6c
 `define MDIO_3_MMD_ACCESS_CTRL          `MDIO_REG_ADDR_WIDTH'h6d
 `define MDIO_3_MMD_ACCESS_STATUS        `MDIO_REG_ADDR_WIDTH'h6e
 `define MDIO_3_EXTENDED_STATUS          `MDIO_REG_ADDR_WIDTH'h6f

 // MDIO Control register bit positions
 `define PHY_RST_BIT_POS                 15
 `define PHY_LOOPBACK_BIT_POS            14
 `define PHY_SPEED_SEL_LO_BIT_POS        13
 `define PHY_AUTONEG_ENABLE_BIT_POS      12
 `define PHY_PWR_DOWN_BIT_POS            11
 `define PHY_ISOLATE_BIT_POS             10
 `define PHY_RESTART_AUTONEG_BIT_POS     9
 `define PHY_DUPLEX_MODE_BIT_POS         8
 `define PHY_COLLISION_TEST_BIT_POS      7
 `define PHY_SPEED_SEL_HI_BIT_POS        6
 `define PHY_UNIDIR_ENABLE_BIT_POS       5

 // MDIO status register bit positions
 `define PHY_100BASE_T4_BIT_POS          15
 `define PHY_100BASE_X_FULL_DPLX_BIT_POS 14
 `define PHY_100BASE_X_HALF_DPLX_BIT_POS 13
 `define PHY_10MBPS_FULL_DPLX_BIT_POS    12
 `define PHY_10MBPS_HALF_DPLX_BIT_POS    11
 `define PHY_100BASE_T2_FULL_DPLX_BIT_POS 10
 `define PHY_100BASE_T2_HALF_DPLX_BIT_POS 9
 `define PHY_EXTENDED_STATUS_BIT_POS     8
 `define PHY_UNIDIR_ABILITY_BIT_POS      7
 `define PHY_MF_PREAMBLE_SPRSN_BIT_POS   6
 `define PHY_AUTONEG_COMPLETE_BIT_POS    5
 `define PHY_REMOTE_FAULT_BIT_POS        4
 `define PHY_AUTONEG_ABILITY_BIT_POS     3
 `define PHY_LINK_STATUS_BIT_POS         2
 `define PHY_JABBER_DETECT_BIT_POS       1
 `define PHY_EXTENDED_CAPABILITY_BIT_POS 0


 // 2- add other internal addresses here
 `define COUNTER_1_REG                   `COUNTER_REG_ADDR_WIDTH'h0
 `define COUNTER_2_REG                   `COUNTER_REG_ADDR_WIDTH'h1
 `define COUNTER_3_REG                   `COUNTER_REG_ADDR_WIDTH'h2
 `define COUNTER_4_REG                   `COUNTER_REG_ADDR_WIDTH'h3

 `define COUNTER_1_2_REG_LOAD            `COUNTER_REG_ADDR_WIDTH'h4
 `define COUNTER_3_4_REG_LOAD            `COUNTER_REG_ADDR_WIDTH'h5

 `define COUNTER_BIT_95_64                `COUNTER_REG_ADDR_WIDTH'h6
 `define COUNTER_BIT_63_32                `COUNTER_REG_ADDR_WIDTH'h7
 `define COUNTER_BIT_31_0                 `COUNTER_REG_ADDR_WIDTH'h8
 `define COUNTER_READ_ENABLE              `COUNTER_REG_ADDR_WIDTH'h9

 `define CLK_SYN_0_COUNTER_RESET           `COUNTER_REG_ADDR_WIDTH'ha
 `define CLK_SYN_0_TX_LO                   `COUNTER_REG_ADDR_WIDTH'hb
 `define CLK_SYN_0_TX_HI                   `COUNTER_REG_ADDR_WIDTH'hc
 `define CLK_SYN_0_RX_LO                   `COUNTER_REG_ADDR_WIDTH'hd
 `define CLK_SYN_0_RX_HI                   `COUNTER_REG_ADDR_WIDTH'he

 `define CLK_SYN_1_COUNTER_RESET           `COUNTER_REG_ADDR_WIDTH'hf
 `define CLK_SYN_1_TX_LO                   `COUNTER_REG_ADDR_WIDTH'h10
 `define CLK_SYN_1_TX_HI                   `COUNTER_REG_ADDR_WIDTH'h11
 `define CLK_SYN_1_RX_LO                   `COUNTER_REG_ADDR_WIDTH'h12
 `define CLK_SYN_1_RX_HI                   `COUNTER_REG_ADDR_WIDTH'h13

 `define CLK_SYN_2_COUNTER_RESET           `COUNTER_REG_ADDR_WIDTH'h14
 `define CLK_SYN_2_TX_LO                   `COUNTER_REG_ADDR_WIDTH'h15
 `define CLK_SYN_2_TX_HI                   `COUNTER_REG_ADDR_WIDTH'h16
 `define CLK_SYN_2_RX_LO                   `COUNTER_REG_ADDR_WIDTH'h17
 `define CLK_SYN_2_RX_HI                   `COUNTER_REG_ADDR_WIDTH'h18

 `define CLK_SYN_3_COUNTER_RESET           `COUNTER_REG_ADDR_WIDTH'h19
 `define CLK_SYN_3_TX_LO                   `COUNTER_REG_ADDR_WIDTH'h1a
 `define CLK_SYN_3_TX_HI                   `COUNTER_REG_ADDR_WIDTH'h1b
 `define CLK_SYN_3_RX_LO                   `COUNTER_REG_ADDR_WIDTH'h1c
 `define CLK_SYN_3_RX_HI                   `COUNTER_REG_ADDR_WIDTH'h1d

 `define PTP_VALID_RX                      `COUNTER_REG_ADDR_WIDTH'h1e
 `define PTP_VALID_TX                      `COUNTER_REG_ADDR_WIDTH'h1f
 `define PTP_ENABLE_MASK_RX                `COUNTER_REG_ADDR_WIDTH'h20
 `define PTP_ENABLE_MASK_TX                `COUNTER_REG_ADDR_WIDTH'H21
 `define PTP_MASK_RX                       `COUNTER_REG_ADDR_WIDTH'h22
 `define PTP_MASK_TX                       `COUNTER_REG_ADDR_WIDTH'h23

 `define CLK_TEST_TICKS                    `CLK_TEST_REG_ADDR_WIDTH'h0

 `define SERIAL_TEST_CONTROL_0             `SERIAL_TEST_REG_ADDR_WIDTH'h0
 `define SERIAL_TEST_STATUS_0              `SERIAL_TEST_REG_ADDR_WIDTH'h1
 `define SERIAL_TEST_NUM_FRAMES_SENT_0_LO  `SERIAL_TEST_REG_ADDR_WIDTH'h2
 `define SERIAL_TEST_NUM_FRAMES_RCVD_0_LO  `SERIAL_TEST_REG_ADDR_WIDTH'h3
 `define SERIAL_TEST_NUM_FRAMES_SENT_0_HI  `SERIAL_TEST_REG_ADDR_WIDTH'h4
 `define SERIAL_TEST_NUM_FRAMES_RCVD_0_HI  `SERIAL_TEST_REG_ADDR_WIDTH'h5
 `define SERIAL_TEST_CONTROL_1             `SERIAL_TEST_REG_ADDR_WIDTH'h6
 `define SERIAL_TEST_STATUS_1              `SERIAL_TEST_REG_ADDR_WIDTH'h7
 `define SERIAL_TEST_NUM_FRAMES_SENT_1_LO  `SERIAL_TEST_REG_ADDR_WIDTH'h8
 `define SERIAL_TEST_NUM_FRAMES_RCVD_1_LO  `SERIAL_TEST_REG_ADDR_WIDTH'h9
 `define SERIAL_TEST_NUM_FRAMES_SENT_1_HI  `SERIAL_TEST_REG_ADDR_WIDTH'ha
 `define SERIAL_TEST_NUM_FRAMES_RCVD_1_HI  `SERIAL_TEST_REG_ADDR_WIDTH'hb
 `define SERIAL_TEST_CTRL  		   `SERIAL_TEST_REG_ADDR_WIDTH'hc
 `define SERIAL_TEST_STAT                  `SERIAL_TEST_REG_ADDR_WIDTH'hd

 `define SRAM_MSB_SRAM1_RD                 `SRAM_MSB_REG_ADDR_WIDTH'h0
 `define SRAM_MSB_SRAM1_WR                 `SRAM_MSB_REG_ADDR_WIDTH'h1
 `define SRAM_MSB_SRAM2_RD                 `SRAM_MSB_REG_ADDR_WIDTH'h2
 `define SRAM_MSB_SRAM2_WR                 `SRAM_MSB_REG_ADDR_WIDTH'h3

 `define SRAM_TEST_ERR_CNT                 `SRAM_TEST_REG_ADDR_WIDTH'h0
 `define SRAM_TEST_ITER_NUM                `SRAM_TEST_REG_ADDR_WIDTH'h1
 `define SRAM_TEST_BAD_RUNS           	   `SRAM_TEST_REG_ADDR_WIDTH'h2
 `define SRAM_TEST_GOOD_RUNS               `SRAM_TEST_REG_ADDR_WIDTH'h3
 `define SRAM_TEST_STATUS                  `SRAM_TEST_REG_ADDR_WIDTH'h4
 `define SRAM_TEST_EN                      `SRAM_TEST_REG_ADDR_WIDTH'h5
 `define SRAM_TEST_CTRL                    `SRAM_TEST_REG_ADDR_WIDTH'h6
 `define SRAM_TEST_RAND_SEED_1         	   `SRAM_TEST_REG_ADDR_WIDTH'h7
 `define SRAM_TEST_RAND_SEED_2             `SRAM_TEST_REG_ADDR_WIDTH'h8

 `define SRAM_TEST_LOG_ADDR      	   `SRAM_TEST_REG_ADDR_WIDTH'h8000
 `define SRAM_TEST_LOG_EXP_DATA_HI         `SRAM_TEST_REG_ADDR_WIDTH'h8001
 `define SRAM_TEST_LOG_EXP_DATA_LO         `SRAM_TEST_REG_ADDR_WIDTH'h8002
 `define SRAM_TEST_LOG_RD_DATA_HI      	   `SRAM_TEST_REG_ADDR_WIDTH'h8003
 `define SRAM_TEST_LOG_RD_DATA_LO          `SRAM_TEST_REG_ADDR_WIDTH'h8004

 `define DRAM_TEST_ERR_CNT                 `DRAM_TEST_REG_ADDR_WIDTH'h0
 `define DRAM_TEST_ITER_NUM                `DRAM_TEST_REG_ADDR_WIDTH'h1
 `define DRAM_TEST_BAD_RUNS           	   `DRAM_TEST_REG_ADDR_WIDTH'h2
 `define DRAM_TEST_GOOD_RUNS               `DRAM_TEST_REG_ADDR_WIDTH'h3
 `define DRAM_TEST_STATUS                  `DRAM_TEST_REG_ADDR_WIDTH'h4
 `define DRAM_TEST_EN                      `DRAM_TEST_REG_ADDR_WIDTH'h5
 `define DRAM_TEST_CTRL                    `DRAM_TEST_REG_ADDR_WIDTH'h6
 `define DRAM_TEST_RAND_SEED         	   `DRAM_TEST_REG_ADDR_WIDTH'h7

 `define DRAM_TEST_LOG_ADDR      	   `DRAM_TEST_REG_ADDR_WIDTH'h8000
 `define DRAM_TEST_LOG_EXP_DATA_HI         `DRAM_TEST_REG_ADDR_WIDTH'h8001
 `define DRAM_TEST_LOG_EXP_DATA_LO         `DRAM_TEST_REG_ADDR_WIDTH'h8002
 `define DRAM_TEST_LOG_RD_DATA_HI      	   `DRAM_TEST_REG_ADDR_WIDTH'h8003
 `define DRAM_TEST_LOG_RD_DATA_LO          `DRAM_TEST_REG_ADDR_WIDTH'h8004

 `define PHY_TEST_GENERAL_BASE             ({1'b0, {(`PHY_TEST_REG_ADDR_WIDTH - 1){1'b0}}})
 `define PHY_TEST_PORTS_BASE               ({1'b1, {(`PHY_TEST_REG_ADDR_WIDTH - 1){1'b0}}})

 `define PHY_TEST_PORT_0_BASE              ({1'b0, 2'b00, {(`PHY_TEST_REG_ADDR_WIDTH - 3){1'b0}}})
 `define PHY_TEST_PORT_1_BASE              ({1'b0, 2'b01, {(`PHY_TEST_REG_ADDR_WIDTH - 3){1'b0}}})
 `define PHY_TEST_PORT_2_BASE              ({1'b0, 2'b10, {(`PHY_TEST_REG_ADDR_WIDTH - 3){1'b0}}})
 `define PHY_TEST_PORT_3_BASE              ({1'b0, 2'b11, {(`PHY_TEST_REG_ADDR_WIDTH - 3){1'b0}}})

 `define PHY_TEST_TX_BASE                  ({3'b000, 2'b00, {(`PHY_TEST_REG_ADDR_WIDTH - 5){1'b0}}})
 `define PHY_TEST_RX_BASE                  ({3'b000, 2'b01, {(`PHY_TEST_REG_ADDR_WIDTH - 5){1'b0}}})
 `define PHY_TEST_RX_LOG_BASE              ({3'b000, 2'b10, {(`PHY_TEST_REG_ADDR_WIDTH - 5){1'b0}}})

 `define PHY_TEST_STATUS                   `PHY_TEST_REG_ADDR_WIDTH'h0
 `define PHY_TEST_CTRL                     `PHY_TEST_REG_ADDR_WIDTH'h1
 `define PHY_TEST_SIZE                	   `PHY_TEST_REG_ADDR_WIDTH'h2
 `define PHY_TEST_PATTERN                  `PHY_TEST_REG_ADDR_WIDTH'h3
 `define PHY_TEST_INIT_SEQ_NO              `PHY_TEST_REG_ADDR_WIDTH'h4

 `define PHY_TEST_TX_STATUS                `PHY_TEST_REG_ADDR_WIDTH'h0
 `define PHY_TEST_TX_ITER_CNT              `PHY_TEST_REG_ADDR_WIDTH'h1
 `define PHY_TEST_TX_PKT_CNT               `PHY_TEST_REG_ADDR_WIDTH'h2
 `define PHY_TEST_TX_SEQ_NO                `PHY_TEST_REG_ADDR_WIDTH'h3
 `define PHY_TEST_TX_RAND_SEED             `PHY_TEST_REG_ADDR_WIDTH'h4

 `define PHY_TEST_RX_STATUS                `PHY_TEST_REG_ADDR_WIDTH'h0
 `define PHY_TEST_RX_GOOD_PKT_CNT          `PHY_TEST_REG_ADDR_WIDTH'h1
 `define PHY_TEST_RX_ERR_PKT_CNT           `PHY_TEST_REG_ADDR_WIDTH'h2
 `define PHY_TEST_RX_SEQ_NO                `PHY_TEST_REG_ADDR_WIDTH'h3
 `define PHY_TEST_RX_CTRL                  `PHY_TEST_REG_ADDR_WIDTH'h4

 `define PHY_TEST_RX_LOG_STATUS            `PHY_TEST_REG_ADDR_WIDTH'h0
 `define PHY_TEST_RX_LOG_EXP_DATA          `PHY_TEST_REG_ADDR_WIDTH'h1
 `define PHY_TEST_RX_LOG_RX_DATA           `PHY_TEST_REG_ADDR_WIDTH'h2
 `define PHY_TEST_RX_LOG_CTRL              `PHY_TEST_REG_ADDR_WIDTH'h3

 /************************
   --- External addresses
  ************************/

 // Address of the first word of SRAM
 `define SRAM_BASE_ADDR_REG                   ({{(`CPCI_NF2_ADDR_WIDTH-`SRAM_BLOCK_ADDR_WIDTH-`SRAM_REG_ADDR_WIDTH){1'b0}}, `SRAM_BLOCK_ADDR, {`SRAM_REG_ADDR_WIDTH{1'b0}}})
 `define DRAM_BASE_ADDR_REG                   ({{(`CPCI_NF2_ADDR_WIDTH-`DRAM_BLOCK_ADDR_WIDTH-`DRAM_REG_ADDR_WIDTH){1'b0}}, `DRAM_BLOCK_ADDR, {`DRAM_REG_ADDR_WIDTH{1'b0}}})
 `define SRAM_ADDR_WIDTH                      19

 // Address of the first block in core
 `define CORE_BLOCK_1                         ({{(`CPCI_NF2_ADDR_WIDTH-`CORE_BLOCK_ADDR_WIDTH-`CORE_REG_ADDR_WIDTH){1'b0}}, 2'b01}) 
 `define CORE_BLOCK_2                         ({{(`CPCI_NF2_ADDR_WIDTH-`CORE_BLOCK_ADDR_WIDTH-`CORE_REG_ADDR_WIDTH){1'b0}}, 2'b10}) 

 // Device ID registers
 `define DEVICE_MD5_1_REG                     ({`CORE_BLOCK_1, `DEV_ID_BLOCK_ADDR, `DEV_ID_MD5_1})
 `define DEVICE_MD5_2_REG                     ({`CORE_BLOCK_1, `DEV_ID_BLOCK_ADDR, `DEV_ID_MD5_2})
 `define DEVICE_MD5_3_REG                     ({`CORE_BLOCK_1, `DEV_ID_BLOCK_ADDR, `DEV_ID_MD5_3})
 `define DEVICE_MD5_4_REG                     ({`CORE_BLOCK_1, `DEV_ID_BLOCK_ADDR, `DEV_ID_MD5_4})
 `define DEVICE_ID_REG                        ({`CORE_BLOCK_1, `DEV_ID_BLOCK_ADDR, `DEV_ID_LOCN})
 `define DEVICE_REVISION_REG                  ({`CORE_BLOCK_1, `DEV_ID_BLOCK_ADDR, `DEV_REVISION_LOCN})
 `define DEVICE_CPCI_ID_REG                   ({`CORE_BLOCK_1, `DEV_ID_BLOCK_ADDR, `DEV_CPCI_ID_LOCN})
 `define DEVICE_STR_REG                       ({`CORE_BLOCK_1, `DEV_ID_BLOCK_ADDR, `DEV_STR_LOCN})
 
 // MAC group registers
 `define MAC_GRP_0_CONTROL_REG                ({`CORE_BLOCK_1, `MAC_GRP_0_BLOCK_ADDR, `MAC_GRP_CONTROL})
 `define RX_QUEUE_0_NUM_PKTS_STORED_REG       ({`CORE_BLOCK_1, `MAC_GRP_0_BLOCK_ADDR, `RX_QUEUE_NUM_PKTS_STORED})
 `define RX_QUEUE_0_NUM_PKTS_DROPPED_FULL_REG ({`CORE_BLOCK_1, `MAC_GRP_0_BLOCK_ADDR, `RX_QUEUE_NUM_PKTS_DROPPED_FULL})
 `define RX_QUEUE_0_NUM_PKTS_DROPPED_BAD_REG  ({`CORE_BLOCK_1, `MAC_GRP_0_BLOCK_ADDR, `RX_QUEUE_NUM_PKTS_DROPPED_BAD})
 `define RX_QUEUE_0_NUM_WORDS_PUSHED_REG      ({`CORE_BLOCK_1, `MAC_GRP_0_BLOCK_ADDR, `RX_QUEUE_NUM_WORDS_PUSHED})
 `define RX_QUEUE_0_NUM_BYTES_PUSHED_REG      ({`CORE_BLOCK_1, `MAC_GRP_0_BLOCK_ADDR, `RX_QUEUE_NUM_BYTES_PUSHED})
 `define RX_QUEUE_0_NUM_PKTS_DEQUEUED_REG     ({`CORE_BLOCK_1, `MAC_GRP_0_BLOCK_ADDR, `RX_QUEUE_NUM_PKTS_DEQUEUED})
 `define RX_QUEUE_0_NUM_PKTS_IN_QUEUE_REG     ({`CORE_BLOCK_1, `MAC_GRP_0_BLOCK_ADDR, `RX_QUEUE_NUM_PKTS_IN_QUEUE})

 `define TX_QUEUE_0_NUM_PKTS_IN_QUEUE_REG     ({`CORE_BLOCK_1, `MAC_GRP_0_BLOCK_ADDR, `TX_QUEUE_NUM_PKTS_IN_QUEUE})
 `define TX_QUEUE_0_NUM_PKTS_SENT_REG         ({`CORE_BLOCK_1, `MAC_GRP_0_BLOCK_ADDR, `TX_QUEUE_NUM_PKTS_SENT})
 `define TX_QUEUE_0_NUM_WORDS_PUSHED_REG      ({`CORE_BLOCK_1, `MAC_GRP_0_BLOCK_ADDR, `TX_QUEUE_NUM_WORDS_PUSHED})
 `define TX_QUEUE_0_NUM_BYTES_PUSHED_REG      ({`CORE_BLOCK_1, `MAC_GRP_0_BLOCK_ADDR, `TX_QUEUE_NUM_BYTES_PUSHED})
 `define TX_QUEUE_0_NUM_PKTS_ENQUEUED_REG     ({`CORE_BLOCK_1, `MAC_GRP_0_BLOCK_ADDR, `TX_QUEUE_NUM_PKTS_ENQUEUED})

 `define MAC_GRP_1_CONTROL_REG                ({`CORE_BLOCK_1, `MAC_GRP_1_BLOCK_ADDR, `MAC_GRP_CONTROL})
 `define RX_QUEUE_1_NUM_PKTS_STORED_REG       ({`CORE_BLOCK_1, `MAC_GRP_1_BLOCK_ADDR, `RX_QUEUE_NUM_PKTS_STORED})
 `define RX_QUEUE_1_NUM_PKTS_DROPPED_FULL_REG ({`CORE_BLOCK_1, `MAC_GRP_1_BLOCK_ADDR, `RX_QUEUE_NUM_PKTS_DROPPED_FULL})
 `define RX_QUEUE_1_NUM_PKTS_DROPPED_BAD_REG  ({`CORE_BLOCK_1, `MAC_GRP_1_BLOCK_ADDR, `RX_QUEUE_NUM_PKTS_DROPPED_BAD})
 `define RX_QUEUE_1_NUM_WORDS_PUSHED_REG      ({`CORE_BLOCK_1, `MAC_GRP_1_BLOCK_ADDR, `RX_QUEUE_NUM_WORDS_PUSHED})
 `define RX_QUEUE_1_NUM_BYTES_PUSHED_REG      ({`CORE_BLOCK_1, `MAC_GRP_1_BLOCK_ADDR, `RX_QUEUE_NUM_BYTES_PUSHED})
 `define RX_QUEUE_1_NUM_PKTS_DEQUEUED_REG     ({`CORE_BLOCK_1, `MAC_GRP_1_BLOCK_ADDR, `RX_QUEUE_NUM_PKTS_DEQUEUED})
 `define RX_QUEUE_1_NUM_PKTS_IN_QUEUE_REG     ({`CORE_BLOCK_1, `MAC_GRP_1_BLOCK_ADDR, `RX_QUEUE_NUM_PKTS_IN_QUEUE})

 `define TX_QUEUE_1_NUM_PKTS_IN_QUEUE_REG     ({`CORE_BLOCK_1, `MAC_GRP_1_BLOCK_ADDR, `TX_QUEUE_NUM_PKTS_IN_QUEUE})
 `define TX_QUEUE_1_NUM_PKTS_SENT_REG         ({`CORE_BLOCK_1, `MAC_GRP_1_BLOCK_ADDR, `TX_QUEUE_NUM_PKTS_SENT})
 `define TX_QUEUE_1_NUM_WORDS_PUSHED_REG      ({`CORE_BLOCK_1, `MAC_GRP_1_BLOCK_ADDR, `TX_QUEUE_NUM_WORDS_PUSHED})
 `define TX_QUEUE_1_NUM_BYTES_PUSHED_REG      ({`CORE_BLOCK_1, `MAC_GRP_1_BLOCK_ADDR, `TX_QUEUE_NUM_BYTES_PUSHED})
 `define TX_QUEUE_1_NUM_PKTS_ENQUEUED_REG     ({`CORE_BLOCK_1, `MAC_GRP_1_BLOCK_ADDR, `TX_QUEUE_NUM_PKTS_ENQUEUED})

 `define MAC_GRP_2_CONTROL_REG                ({`CORE_BLOCK_1, `MAC_GRP_2_BLOCK_ADDR, `MAC_GRP_CONTROL})
 `define RX_QUEUE_2_NUM_PKTS_STORED_REG       ({`CORE_BLOCK_1, `MAC_GRP_2_BLOCK_ADDR, `RX_QUEUE_NUM_PKTS_STORED})
 `define RX_QUEUE_2_NUM_PKTS_DROPPED_FULL_REG ({`CORE_BLOCK_1, `MAC_GRP_2_BLOCK_ADDR, `RX_QUEUE_NUM_PKTS_DROPPED_FULL})
 `define RX_QUEUE_2_NUM_PKTS_DROPPED_BAD_REG  ({`CORE_BLOCK_1, `MAC_GRP_2_BLOCK_ADDR, `RX_QUEUE_NUM_PKTS_DROPPED_BAD})
 `define RX_QUEUE_2_NUM_WORDS_PUSHED_REG      ({`CORE_BLOCK_1, `MAC_GRP_2_BLOCK_ADDR, `RX_QUEUE_NUM_WORDS_PUSHED})
 `define RX_QUEUE_2_NUM_BYTES_PUSHED_REG      ({`CORE_BLOCK_1, `MAC_GRP_2_BLOCK_ADDR, `RX_QUEUE_NUM_BYTES_PUSHED})
 `define RX_QUEUE_2_NUM_PKTS_DEQUEUED_REG     ({`CORE_BLOCK_1, `MAC_GRP_2_BLOCK_ADDR, `RX_QUEUE_NUM_PKTS_DEQUEUED})
 `define RX_QUEUE_2_NUM_PKTS_IN_QUEUE_REG     ({`CORE_BLOCK_1, `MAC_GRP_2_BLOCK_ADDR, `RX_QUEUE_NUM_PKTS_IN_QUEUE})

 `define TX_QUEUE_2_NUM_PKTS_IN_QUEUE_REG     ({`CORE_BLOCK_1, `MAC_GRP_2_BLOCK_ADDR, `TX_QUEUE_NUM_PKTS_IN_QUEUE})
 `define TX_QUEUE_2_NUM_PKTS_SENT_REG         ({`CORE_BLOCK_1, `MAC_GRP_2_BLOCK_ADDR, `TX_QUEUE_NUM_PKTS_SENT})
 `define TX_QUEUE_2_NUM_WORDS_PUSHED_REG      ({`CORE_BLOCK_1, `MAC_GRP_2_BLOCK_ADDR, `TX_QUEUE_NUM_WORDS_PUSHED})
 `define TX_QUEUE_2_NUM_BYTES_PUSHED_REG      ({`CORE_BLOCK_1, `MAC_GRP_2_BLOCK_ADDR, `TX_QUEUE_NUM_BYTES_PUSHED})
 `define TX_QUEUE_2_NUM_PKTS_ENQUEUED_REG     ({`CORE_BLOCK_1, `MAC_GRP_2_BLOCK_ADDR, `TX_QUEUE_NUM_PKTS_ENQUEUED})

 `define MAC_GRP_3_CONTROL_REG                ({`CORE_BLOCK_1, `MAC_GRP_3_BLOCK_ADDR, `MAC_GRP_CONTROL})
 `define RX_QUEUE_3_NUM_PKTS_STORED_REG       ({`CORE_BLOCK_1, `MAC_GRP_3_BLOCK_ADDR, `RX_QUEUE_NUM_PKTS_STORED})
 `define RX_QUEUE_3_NUM_PKTS_DROPPED_FULL_REG ({`CORE_BLOCK_1, `MAC_GRP_3_BLOCK_ADDR, `RX_QUEUE_NUM_PKTS_DROPPED_FULL})
 `define RX_QUEUE_3_NUM_PKTS_DROPPED_BAD_REG  ({`CORE_BLOCK_1, `MAC_GRP_3_BLOCK_ADDR, `RX_QUEUE_NUM_PKTS_DROPPED_BAD})
 `define RX_QUEUE_3_NUM_WORDS_PUSHED_REG      ({`CORE_BLOCK_1, `MAC_GRP_3_BLOCK_ADDR, `RX_QUEUE_NUM_WORDS_PUSHED})
 `define RX_QUEUE_3_NUM_BYTES_PUSHED_REG      ({`CORE_BLOCK_1, `MAC_GRP_3_BLOCK_ADDR, `RX_QUEUE_NUM_BYTES_PUSHED})
 `define RX_QUEUE_3_NUM_PKTS_DEQUEUED_REG     ({`CORE_BLOCK_1, `MAC_GRP_3_BLOCK_ADDR, `RX_QUEUE_NUM_PKTS_DEQUEUED})
 `define RX_QUEUE_3_NUM_PKTS_IN_QUEUE_REG     ({`CORE_BLOCK_1, `MAC_GRP_3_BLOCK_ADDR, `RX_QUEUE_NUM_PKTS_IN_QUEUE})

 `define TX_QUEUE_3_NUM_PKTS_IN_QUEUE_REG     ({`CORE_BLOCK_1, `MAC_GRP_3_BLOCK_ADDR, `TX_QUEUE_NUM_PKTS_IN_QUEUE})
 `define TX_QUEUE_3_NUM_PKTS_SENT_REG         ({`CORE_BLOCK_1, `MAC_GRP_3_BLOCK_ADDR, `TX_QUEUE_NUM_PKTS_SENT})
 `define TX_QUEUE_3_NUM_WORDS_PUSHED_REG      ({`CORE_BLOCK_1, `MAC_GRP_3_BLOCK_ADDR, `TX_QUEUE_NUM_WORDS_PUSHED})
 `define TX_QUEUE_3_NUM_BYTES_PUSHED_REG      ({`CORE_BLOCK_1, `MAC_GRP_3_BLOCK_ADDR, `TX_QUEUE_NUM_BYTES_PUSHED})
 `define TX_QUEUE_3_NUM_PKTS_ENQUEUED_REG     ({`CORE_BLOCK_1, `MAC_GRP_3_BLOCK_ADDR, `TX_QUEUE_NUM_PKTS_ENQUEUED})

  // CLK_SYN bloc register addresses


// CPU queue block regsiter addresses


 // CPU queue block regsiter addresses

 `define CPU_REG_Q_0_WR_DATA_WORD_REG         ({`CORE_BLOCK_1, `CPU_QUEUE_0_BLOCK_ADDR, `CPU_REG_Q_WR_DATA_WORD})
 `define CPU_REG_Q_0_WR_CTRL_WORD_REG         ({`CORE_BLOCK_1, `CPU_QUEUE_0_BLOCK_ADDR, `CPU_REG_Q_WR_CTRL_WORD})
 `define CPU_REG_Q_0_WR_NUM_WORDS_LEFT_REG    ({`CORE_BLOCK_1, `CPU_QUEUE_0_BLOCK_ADDR, `CPU_REG_Q_WR_NUM_WORDS_LEFT})
 `define CPU_REG_Q_0_WR_NUM_PKTS_IN_Q_REG     ({`CORE_BLOCK_1, `CPU_QUEUE_0_BLOCK_ADDR, `CPU_REG_Q_WR_NUM_PKTS_IN_Q})
 `define CPU_REG_Q_0_RD_DATA_WORD_REG         ({`CORE_BLOCK_1, `CPU_QUEUE_0_BLOCK_ADDR, `CPU_REG_Q_RD_DATA_WORD})
 `define CPU_REG_Q_0_RD_CTRL_WORD_REG         ({`CORE_BLOCK_1, `CPU_QUEUE_0_BLOCK_ADDR, `CPU_REG_Q_RD_CTRL_WORD})
 `define CPU_REG_Q_0_RD_NUM_WORDS_AVAIL_REG   ({`CORE_BLOCK_1, `CPU_QUEUE_0_BLOCK_ADDR, `CPU_REG_Q_RD_NUM_WORDS_AVAIL})
 `define CPU_REG_Q_0_RD_NUM_PKTS_IN_Q_REG     ({`CORE_BLOCK_1, `CPU_QUEUE_0_BLOCK_ADDR, `CPU_REG_Q_RD_NUM_PKTS_IN_Q})
 `define CPU_REG_Q_0_RX_NUM_PKTS_RCVD_REG     ({`CORE_BLOCK_1, `CPU_QUEUE_0_BLOCK_ADDR, `CPU_REG_Q_RX_NUM_PKTS_RCVD})
 `define CPU_REG_Q_0_TX_NUM_PKTS_SENT_REG     ({`CORE_BLOCK_1, `CPU_QUEUE_0_BLOCK_ADDR, `CPU_REG_Q_TX_NUM_PKTS_SENT})
 `define CPU_REG_Q_0_RX_NUM_WORDS_RCVD_REG    ({`CORE_BLOCK_1, `CPU_QUEUE_0_BLOCK_ADDR, `CPU_REG_Q_RX_NUM_WORDS_RCVD})
 `define CPU_REG_Q_0_TX_NUM_WORDS_SENT_REG    ({`CORE_BLOCK_1, `CPU_QUEUE_0_BLOCK_ADDR, `CPU_REG_Q_TX_NUM_WORDS_SENT})
 `define CPU_REG_Q_0_RX_NUM_BYTES_RCVD_REG    ({`CORE_BLOCK_1, `CPU_QUEUE_0_BLOCK_ADDR, `CPU_REG_Q_RX_NUM_BYTES_RCVD})
 `define CPU_REG_Q_0_TX_NUM_BYTES_SENT_REG    ({`CORE_BLOCK_1, `CPU_QUEUE_0_BLOCK_ADDR, `CPU_REG_Q_TX_NUM_BYTES_SENT})

 `define CPU_REG_Q_1_WR_DATA_WORD_REG         ({`CORE_BLOCK_1, `CPU_QUEUE_1_BLOCK_ADDR, `CPU_REG_Q_WR_DATA_WORD})
 `define CPU_REG_Q_1_WR_CTRL_WORD_REG         ({`CORE_BLOCK_1, `CPU_QUEUE_1_BLOCK_ADDR, `CPU_REG_Q_WR_CTRL_WORD})
 `define CPU_REG_Q_1_WR_NUM_WORDS_LEFT_REG    ({`CORE_BLOCK_1, `CPU_QUEUE_1_BLOCK_ADDR, `CPU_REG_Q_WR_NUM_WORDS_LEFT})
 `define CPU_REG_Q_1_WR_NUM_PKTS_IN_Q_REG     ({`CORE_BLOCK_1, `CPU_QUEUE_1_BLOCK_ADDR, `CPU_REG_Q_WR_NUM_PKTS_IN_Q})
 `define CPU_REG_Q_1_RD_DATA_WORD_REG         ({`CORE_BLOCK_1, `CPU_QUEUE_1_BLOCK_ADDR, `CPU_REG_Q_RD_DATA_WORD})
 `define CPU_REG_Q_1_RD_CTRL_WORD_REG         ({`CORE_BLOCK_1, `CPU_QUEUE_1_BLOCK_ADDR, `CPU_REG_Q_RD_CTRL_WORD})
 `define CPU_REG_Q_1_RD_NUM_WORDS_AVAIL_REG   ({`CORE_BLOCK_1, `CPU_QUEUE_1_BLOCK_ADDR, `CPU_REG_Q_RD_NUM_WORDS_AVAIL})
 `define CPU_REG_Q_1_RD_NUM_PKTS_IN_Q_REG     ({`CORE_BLOCK_1, `CPU_QUEUE_1_BLOCK_ADDR, `CPU_REG_Q_RD_NUM_PKTS_IN_Q})
 `define CPU_REG_Q_1_RX_NUM_PKTS_RCVD_REG     ({`CORE_BLOCK_1, `CPU_QUEUE_1_BLOCK_ADDR, `CPU_REG_Q_RX_NUM_PKTS_RCVD})
 `define CPU_REG_Q_1_TX_NUM_PKTS_SENT_REG     ({`CORE_BLOCK_1, `CPU_QUEUE_1_BLOCK_ADDR, `CPU_REG_Q_TX_NUM_PKTS_SENT})
 `define CPU_REG_Q_1_RX_NUM_WORDS_RCVD_REG    ({`CORE_BLOCK_1, `CPU_QUEUE_1_BLOCK_ADDR, `CPU_REG_Q_RX_NUM_WORDS_RCVD})
 `define CPU_REG_Q_1_TX_NUM_WORDS_SENT_REG    ({`CORE_BLOCK_1, `CPU_QUEUE_1_BLOCK_ADDR, `CPU_REG_Q_TX_NUM_WORDS_SENT})
 `define CPU_REG_Q_1_RX_NUM_BYTES_RCVD_REG    ({`CORE_BLOCK_1, `CPU_QUEUE_1_BLOCK_ADDR, `CPU_REG_Q_RX_NUM_BYTES_RCVD})
 `define CPU_REG_Q_1_TX_NUM_BYTES_SENT_REG    ({`CORE_BLOCK_1, `CPU_QUEUE_1_BLOCK_ADDR, `CPU_REG_Q_TX_NUM_BYTES_SENT})

 `define CPU_REG_Q_2_WR_DATA_WORD_REG         ({`CORE_BLOCK_1, `CPU_QUEUE_2_BLOCK_ADDR, `CPU_REG_Q_WR_DATA_WORD})
 `define CPU_REG_Q_2_WR_CTRL_WORD_REG         ({`CORE_BLOCK_1, `CPU_QUEUE_2_BLOCK_ADDR, `CPU_REG_Q_WR_CTRL_WORD})
 `define CPU_REG_Q_2_WR_NUM_WORDS_LEFT_REG    ({`CORE_BLOCK_1, `CPU_QUEUE_2_BLOCK_ADDR, `CPU_REG_Q_WR_NUM_WORDS_LEFT})
 `define CPU_REG_Q_2_WR_NUM_PKTS_IN_Q_REG     ({`CORE_BLOCK_1, `CPU_QUEUE_2_BLOCK_ADDR, `CPU_REG_Q_WR_NUM_PKTS_IN_Q})
 `define CPU_REG_Q_2_RD_DATA_WORD_REG         ({`CORE_BLOCK_1, `CPU_QUEUE_2_BLOCK_ADDR, `CPU_REG_Q_RD_DATA_WORD})
 `define CPU_REG_Q_2_RD_CTRL_WORD_REG         ({`CORE_BLOCK_1, `CPU_QUEUE_2_BLOCK_ADDR, `CPU_REG_Q_RD_CTRL_WORD})
 `define CPU_REG_Q_2_RD_NUM_WORDS_AVAIL_REG   ({`CORE_BLOCK_1, `CPU_QUEUE_2_BLOCK_ADDR, `CPU_REG_Q_RD_NUM_WORDS_AVAIL})
 `define CPU_REG_Q_2_RD_NUM_PKTS_IN_Q_REG     ({`CORE_BLOCK_1, `CPU_QUEUE_2_BLOCK_ADDR, `CPU_REG_Q_RD_NUM_PKTS_IN_Q})
 `define CPU_REG_Q_2_RX_NUM_PKTS_RCVD_REG     ({`CORE_BLOCK_1, `CPU_QUEUE_2_BLOCK_ADDR, `CPU_REG_Q_RX_NUM_PKTS_RCVD})
 `define CPU_REG_Q_2_TX_NUM_PKTS_SENT_REG     ({`CORE_BLOCK_1, `CPU_QUEUE_2_BLOCK_ADDR, `CPU_REG_Q_TX_NUM_PKTS_SENT})
 `define CPU_REG_Q_2_RX_NUM_WORDS_RCVD_REG    ({`CORE_BLOCK_1, `CPU_QUEUE_2_BLOCK_ADDR, `CPU_REG_Q_RX_NUM_WORDS_RCVD})
 `define CPU_REG_Q_2_TX_NUM_WORDS_SENT_REG    ({`CORE_BLOCK_1, `CPU_QUEUE_2_BLOCK_ADDR, `CPU_REG_Q_TX_NUM_WORDS_SENT})
 `define CPU_REG_Q_2_RX_NUM_BYTES_RCVD_REG    ({`CORE_BLOCK_1, `CPU_QUEUE_2_BLOCK_ADDR, `CPU_REG_Q_RX_NUM_BYTES_RCVD})
 `define CPU_REG_Q_2_TX_NUM_BYTES_SENT_REG    ({`CORE_BLOCK_1, `CPU_QUEUE_2_BLOCK_ADDR, `CPU_REG_Q_TX_NUM_BYTES_SENT})

 `define CPU_REG_Q_3_WR_DATA_WORD_REG         ({`CORE_BLOCK_1, `CPU_QUEUE_3_BLOCK_ADDR, `CPU_REG_Q_WR_DATA_WORD})
 `define CPU_REG_Q_3_WR_CTRL_WORD_REG         ({`CORE_BLOCK_1, `CPU_QUEUE_3_BLOCK_ADDR, `CPU_REG_Q_WR_CTRL_WORD})
 `define CPU_REG_Q_3_WR_NUM_WORDS_LEFT_REG    ({`CORE_BLOCK_1, `CPU_QUEUE_3_BLOCK_ADDR, `CPU_REG_Q_WR_NUM_WORDS_LEFT})
 `define CPU_REG_Q_3_WR_NUM_PKTS_IN_Q_REG     ({`CORE_BLOCK_1, `CPU_QUEUE_3_BLOCK_ADDR, `CPU_REG_Q_WR_NUM_PKTS_IN_Q})
 `define CPU_REG_Q_3_RD_DATA_WORD_REG         ({`CORE_BLOCK_1, `CPU_QUEUE_3_BLOCK_ADDR, `CPU_REG_Q_RD_DATA_WORD})
 `define CPU_REG_Q_3_RD_CTRL_WORD_REG         ({`CORE_BLOCK_1, `CPU_QUEUE_3_BLOCK_ADDR, `CPU_REG_Q_RD_CTRL_WORD})
 `define CPU_REG_Q_3_RD_NUM_WORDS_AVAIL_REG   ({`CORE_BLOCK_1, `CPU_QUEUE_3_BLOCK_ADDR, `CPU_REG_Q_RD_NUM_WORDS_AVAIL})
 `define CPU_REG_Q_3_RD_NUM_PKTS_IN_Q_REG     ({`CORE_BLOCK_1, `CPU_QUEUE_3_BLOCK_ADDR, `CPU_REG_Q_RD_NUM_PKTS_IN_Q})
 `define CPU_REG_Q_3_RX_NUM_PKTS_RCVD_REG     ({`CORE_BLOCK_1, `CPU_QUEUE_3_BLOCK_ADDR, `CPU_REG_Q_RX_NUM_PKTS_RCVD})
 `define CPU_REG_Q_3_TX_NUM_PKTS_SENT_REG     ({`CORE_BLOCK_1, `CPU_QUEUE_3_BLOCK_ADDR, `CPU_REG_Q_TX_NUM_PKTS_SENT})
 `define CPU_REG_Q_3_RX_NUM_WORDS_RCVD_REG    ({`CORE_BLOCK_1, `CPU_QUEUE_3_BLOCK_ADDR, `CPU_REG_Q_RX_NUM_WORDS_RCVD})
 `define CPU_REG_Q_3_TX_NUM_WORDS_SENT_REG    ({`CORE_BLOCK_1, `CPU_QUEUE_3_BLOCK_ADDR, `CPU_REG_Q_TX_NUM_WORDS_SENT})
 `define CPU_REG_Q_3_RX_NUM_BYTES_RCVD_REG    ({`CORE_BLOCK_1, `CPU_QUEUE_3_BLOCK_ADDR, `CPU_REG_Q_RX_NUM_BYTES_RCVD})
 `define CPU_REG_Q_3_TX_NUM_BYTES_SENT_REG    ({`CORE_BLOCK_1, `CPU_QUEUE_3_BLOCK_ADDR, `CPU_REG_Q_TX_NUM_BYTES_SENT})



 // DMA block register addresses
 `define DMA_TX_QUE_0_REG                    ({`CORE_BLOCK_1, `DMA_BLOCK_ADDR, `DMA_TX_QUE_0})
 `define DMA_TX_QUE_0_LAST_1_BYTE_REG        ({`CORE_BLOCK_1, `DMA_BLOCK_ADDR, `DMA_TX_QUE_0_LAST_1_BYTE})
 `define DMA_TX_QUE_0_LAST_2_BYTE_REG        ({`CORE_BLOCK_1, `DMA_BLOCK_ADDR, `DMA_TX_QUE_0_LAST_2_BYTE})
 `define DMA_TX_QUE_0_LAST_3_BYTE_REG        ({`CORE_BLOCK_1, `DMA_BLOCK_ADDR, `DMA_TX_QUE_0_LAST_3_BYTE})
 `define DMA_TX_QUE_0_LAST_4_BYTE_REG        ({`CORE_BLOCK_1, `DMA_BLOCK_ADDR, `DMA_TX_QUE_0_LAST_4_BYTE})

 `define DMA_TX_QUE_1_REG                    ({`CORE_BLOCK_1, `DMA_BLOCK_ADDR, `DMA_TX_QUE_1})
 `define DMA_TX_QUE_1_LAST_1_BYTE_REG        ({`CORE_BLOCK_1, `DMA_BLOCK_ADDR, `DMA_TX_QUE_1_LAST_1_BYTE})
 `define DMA_TX_QUE_1_LAST_2_BYTE_REG        ({`CORE_BLOCK_1, `DMA_BLOCK_ADDR, `DMA_TX_QUE_1_LAST_2_BYTE})
 `define DMA_TX_QUE_1_LAST_3_BYTE_REG        ({`CORE_BLOCK_1, `DMA_BLOCK_ADDR, `DMA_TX_QUE_1_LAST_3_BYTE})
 `define DMA_TX_QUE_1_LAST_4_BYTE_REG        ({`CORE_BLOCK_1, `DMA_BLOCK_ADDR, `DMA_TX_QUE_1_LAST_4_BYTE})

 `define DMA_TX_QUE_2_REG                    ({`CORE_BLOCK_1, `DMA_BLOCK_ADDR, `DMA_TX_QUE_2})
 `define DMA_TX_QUE_2_LAST_1_BYTE_REG        ({`CORE_BLOCK_1, `DMA_BLOCK_ADDR, `DMA_TX_QUE_2_LAST_1_BYTE})     
 `define DMA_TX_QUE_2_LAST_2_BYTE_REG        ({`CORE_BLOCK_1, `DMA_BLOCK_ADDR, `DMA_TX_QUE_2_LAST_2_BYTE})      
 `define DMA_TX_QUE_2_LAST_3_BYTE_REG        ({`CORE_BLOCK_1, `DMA_BLOCK_ADDR, `DMA_TX_QUE_2_LAST_3_BYTE})     
 `define DMA_TX_QUE_2_LAST_4_BYTE_REG        ({`CORE_BLOCK_1, `DMA_BLOCK_ADDR, `DMA_TX_QUE_2_LAST_4_BYTE})       

 `define DMA_TX_QUE_3_REG                    ({`CORE_BLOCK_1, `DMA_BLOCK_ADDR, `DMA_TX_QUE_3})
 `define DMA_TX_QUE_3_LAST_1_BYTE_REG        ({`CORE_BLOCK_1, `DMA_BLOCK_ADDR, `DMA_TX_QUE_3_LAST_1_BYTE})
 `define DMA_TX_QUE_3_LAST_2_BYTE_REG        ({`CORE_BLOCK_1, `DMA_BLOCK_ADDR, `DMA_TX_QUE_3_LAST_2_BYTE})
 `define DMA_TX_QUE_3_LAST_3_BYTE_REG        ({`CORE_BLOCK_1, `DMA_BLOCK_ADDR, `DMA_TX_QUE_3_LAST_3_BYTE})
 `define DMA_TX_QUE_3_LAST_4_BYTE_REG        ({`CORE_BLOCK_1, `DMA_BLOCK_ADDR, `DMA_TX_QUE_3_LAST_4_BYTE})

 // User data bath base address
 `define UDP_BASE_ADDRESS                    ({{(`CPCI_NF2_ADDR_WIDTH-`UDP_BLOCK_ADDR_WIDTH-`UDP_REG_ADDR_WIDTH){1'b0}}, `UDP_BLOCK_ADDR, `UDP_REG_ADDR_WIDTH'h0})

 `define MDIO_0_CONTROL_REG                  ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_0_CONTROL})
 `define MDIO_0_STATUS_REG                   ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_0_STATUS})
 `define MDIO_0_PHY_ID_0_REG                 ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_0_PHY_ID_0})
 `define MDIO_0_PHY_ID_1_REG                 ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_0_PHY_ID_1})
 `define MDIO_0_AUTONEGOTIATION_ADVERT_REG   ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_0_AUTONEGOTIATION_ADVERT})
 `define MDIO_0_AUTONEG_LINK_PARTNER_BASE_PAGE_ABILITY_REG ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_0_AUTONEG_LINK_PARTNER_BASE_PAGE_ABILITY})
 `define MDIO_0_AUTONEG_EXPANSION_REG        ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_0_AUTONEG_EXPANSION})
 `define MDIO_0_AUTONEG_NEXT_PAGE_TX_REG     ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_0_AUTONEG_NEXT_PAGE_TX})
 `define MDIO_0_AUTONEG_LINK_PARTNER_RCVD_NEXT_PAGE_REG    ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_0_AUTONEG_LINK_PARTNER_RCVD_NEXT_PAGE})
 `define MDIO_0_MASTER_SLAVE_CTRL_REG        ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_0_MASTER_SLAVE_CTRL})
 `define MDIO_0_MASTER_SLAVE_STATUS_REG      ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_0_MASTER_SLAVE_STATUS})
 `define MDIO_0_PSE_CTRL_REG                 ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_0_PSE_CTRL})
 `define MDIO_0_PSE_STATUS_REG               ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_0_PSE_STATUS})
 `define MDIO_0_MMD_ACCESS_CTRL_REG          ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_0_MMD_ACCESS_CTRL})
 `define MDIO_0_MMD_ACCESS_STATUS_REG        ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_0_MMD_ACCESS_STATUS})
 `define MDIO_0_EXTENDED_STATUS_REG          ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_0_EXTENDED_STATUS})

 `define MDIO_1_CONTROL_REG                  ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_1_CONTROL})
 `define MDIO_1_STATUS_REG                   ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_1_STATUS})
 `define MDIO_1_PHY_ID_0_REG                 ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_1_PHY_ID_0})
 `define MDIO_1_PHY_ID_1_REG                 ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_1_PHY_ID_1})
 `define MDIO_1_AUTONEGOTIATION_ADVERT_REG   ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_1_AUTONEGOTIATION_ADVERT})
 `define MDIO_1_AUTONEG_LINK_PARTNER_BASE_PAGE_ABILITY_REG ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_1_AUTONEG_LINK_PARTNER_BASE_PAGE_ABILITY})
 `define MDIO_1_AUTONEG_EXPANSION_REG        ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_1_AUTONEG_EXPANSION})
 `define MDIO_1_AUTONEG_NEXT_PAGE_TX_REG     ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_1_AUTONEG_NEXT_PAGE_TX})
 `define MDIO_1_AUTONEG_LINK_PARTNER_RCVD_NEXT_PAGE_REG    ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_1_AUTONEG_LINK_PARTNER_RCVD_NEXT_PAGE})
 `define MDIO_1_MASTER_SLAVE_CTRL_REG        ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_1_MASTER_SLAVE_CTRL})
 `define MDIO_1_MASTER_SLAVE_STATUS_REG      ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_1_MASTER_SLAVE_STATUS})
 `define MDIO_1_PSE_CTRL_REG                 ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_1_PSE_CTRL})
 `define MDIO_1_PSE_STATUS_REG               ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_1_PSE_STATUS})
 `define MDIO_1_MMD_ACCESS_CTRL_REG          ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_1_MMD_ACCESS_CTRL})
 `define MDIO_1_MMD_ACCESS_STATUS_REG        ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_1_MMD_ACCESS_STATUS})
 `define MDIO_1_EXTENDED_STATUS_REG          ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_1_EXTENDED_STATUS})

 `define MDIO_2_CONTROL_REG                  ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_2_CONTROL})
 `define MDIO_2_STATUS_REG                   ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_2_STATUS})
 `define MDIO_2_PHY_ID_0_REG                 ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_2_PHY_ID_0})
 `define MDIO_2_PHY_ID_1_REG                 ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_2_PHY_ID_1})
 `define MDIO_2_AUTONEGOTIATION_ADVERT_REG   ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_2_AUTONEGOTIATION_ADVERT})
 `define MDIO_2_AUTONEG_LINK_PARTNER_BASE_PAGE_ABILITY_REG ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_2_AUTONEG_LINK_PARTNER_BASE_PAGE_ABILITY})
 `define MDIO_2_AUTONEG_EXPANSION_REG        ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_2_AUTONEG_EXPANSION})
 `define MDIO_2_AUTONEG_NEXT_PAGE_TX_REG     ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_2_AUTONEG_NEXT_PAGE_TX})
 `define MDIO_2_AUTONEG_LINK_PARTNER_RCVD_NEXT_PAGE_REG    ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_2_AUTONEG_LINK_PARTNER_RCVD_NEXT_PAGE})
 `define MDIO_2_MASTER_SLAVE_CTRL_REG        ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_2_MASTER_SLAVE_CTRL})
 `define MDIO_2_MASTER_SLAVE_STATUS_REG      ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_2_MASTER_SLAVE_STATUS})
 `define MDIO_2_PSE_CTRL_REG                 ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_2_PSE_CTRL})
 `define MDIO_2_PSE_STATUS_REG               ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_2_PSE_STATUS})
 `define MDIO_2_MMD_ACCESS_CTRL_REG          ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_2_MMD_ACCESS_CTRL})
 `define MDIO_2_MMD_ACCESS_STATUS_REG        ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_2_MMD_ACCESS_STATUS})
 `define MDIO_2_EXTENDED_STATUS_REG          ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_2_EXTENDED_STATUS})

 `define MDIO_3_CONTROL_REG                  ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_3_CONTROL})
 `define MDIO_3_STATUS_REG                   ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_3_STATUS})
 `define MDIO_3_PHY_ID_0_REG                 ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_3_PHY_ID_0})
 `define MDIO_3_PHY_ID_1_REG                 ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_3_PHY_ID_1})
 `define MDIO_3_AUTONEGOTIATION_ADVERT_REG   ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_3_AUTONEGOTIATION_ADVERT})
 `define MDIO_3_AUTONEG_LINK_PARTNER_BASE_PAGE_ABILITY_REG ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_3_AUTONEG_LINK_PARTNER_BASE_PAGE_ABILITY})
 `define MDIO_3_AUTONEG_EXPANSION_REG        ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_3_AUTONEG_EXPANSION})
 `define MDIO_3_AUTONEG_NEXT_PAGE_TX_REG     ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_3_AUTONEG_NEXT_PAGE_TX})
 `define MDIO_3_AUTONEG_LINK_PARTNER_RCVD_NEXT_PAGE_REG    ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_3_AUTONEG_LINK_PARTNER_RCVD_NEXT_PAGE})
 `define MDIO_3_MASTER_SLAVE_CTRL_REG        ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_3_MASTER_SLAVE_CTRL})
 `define MDIO_3_MASTER_SLAVE_STATUS_REG      ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_3_MASTER_SLAVE_STATUS})
 `define MDIO_3_PSE_CTRL_REG                 ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_3_PSE_CTRL})
 `define MDIO_3_PSE_STATUS_REG               ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_3_PSE_STATUS})
 `define MDIO_3_MMD_ACCESS_CTRL_REG          ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_3_MMD_ACCESS_CTRL})
 `define MDIO_3_MMD_ACCESS_STATUS_REG        ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_3_MMD_ACCESS_STATUS})
 `define MDIO_3_EXTENDED_STATUS_REG          ({`CORE_BLOCK_1, `MDIO_BLOCK_ADDR, `MDIO_3_EXTENDED_STATUS})

 // SRAM/DRAM memory base addresses
 `define SRAM_BASE_ADDR                      ({{(`CPCI_NF2_ADDR_WIDTH-`SRAM_BLOCK_ADDR_WIDTH-`SRAM_REG_ADDR_WIDTH){1'b0}}, `SRAM_BLOCK_ADDR, {(`SRAM_REG_ADDR_WIDTH){1'b0}} })

 `define DRAM_BASE_ADDR                      ({{(`CPCI_NF2_ADDR_WIDTH-`DRAM_BLOCK_ADDR_WIDTH-`DRAM_REG_ADDR_WIDTH){1'b0}}, `DRAM_BLOCK_ADDR, {(`DRAM_REG_ADDR_WIDTH){1'b0}} })

 `define REG_FILE_BASE_ADDR                  ({`CORE_BLOCK_2, `REG_FILE_BLOCK_ADDR, {(`REG_FILE_REG_ADDR_WIDTH){1'b0}} })

 // 4- add external addresses here
 `define STAMP_COUNTER_1_REG               ({`CORE_BLOCK_1, `COUNTER_BLOCK_ADDR, `COUNTER_1_REG})
 `define STAMP_COUNTER_2_REG               ({`CORE_BLOCK_1, `COUNTER_BLOCK_ADDR, `COUNTER_2_REG})
 `define STAMP_COUNTER_3_REG               ({`CORE_BLOCK_1, `COUNTER_BLOCK_ADDR, `COUNTER_3_REG})
 `define STAMP_COUNTER_4_REG               ({`CORE_BLOCK_1, `COUNTER_BLOCK_ADDR, `COUNTER_4_REG})

 `define STAMP_COUNTER_1_2_REG_LOAD        ({`CORE_BLOCK_1, `COUNTER_BLOCK_ADDR, `COUNTER_1_2_REG_LOAD})
 `define STAMP_COUNTER_3_4_REG_LOAD        ({`CORE_BLOCK_1, `COUNTER_BLOCK_ADDR, `COUNTER_3_4_REG_LOAD})


 `define STAMP_COUNTER_BIT_95_64                 ({`CORE_BLOCK_1, `COUNTER_BLOCK_ADDR, `COUNTER_BIT_95_64})
 `define STAMP_COUNTER_BIT_63_32                 ({`CORE_BLOCK_1, `COUNTER_BLOCK_ADDR, `COUNTER_BIT_63_32})
 `define STAMP_COUNTER_BIT_31_0                  ({`CORE_BLOCK_1, `COUNTER_BLOCK_ADDR, `COUNTER_BIT_31_0})
 `define STAMP_COUNTER_READ_ENABLE                ({`CORE_BLOCK_1, `COUNTER_BLOCK_ADDR, `COUNTER_READ_ENABLE})

 `define CLK_SYN_0_COUNTER_RESET_REG   ({`CORE_BLOCK_1, `COUNTER_BLOCK_ADDR, `CLK_SYN_0_COUNTER_RESET})
 `define CLK_SYN_0_TX_LO_REG           ({`CORE_BLOCK_1, `COUNTER_BLOCK_ADDR, `CLK_SYN_0_TX_LO})
 `define CLK_SYN_0_TX_HI_REG           ({`CORE_BLOCK_1, `COUNTER_BLOCK_ADDR, `CLK_SYN_0_TX_HI})
 `define CLK_SYN_0_RX_LO_REG           ({`CORE_BLOCK_1, `COUNTER_BLOCK_ADDR, `CLK_SYN_0_RX_LO})
 `define CLK_SYN_0_RX_HI_REG           ({`CORE_BLOCK_1, `COUNTER_BLOCK_ADDR, `CLK_SYN_0_RX_HI})


 `define CLK_SYN_1_COUNTER_RESET_REG   ({`CORE_BLOCK_1, `COUNTER_BLOCK_ADDR, `CLK_SYN_1_COUNTER_RESET})
 `define CLK_SYN_1_TX_LO_REG           ({`CORE_BLOCK_1, `COUNTER_BLOCK_ADDR, `CLK_SYN_1_TX_LO})
 `define CLK_SYN_1_TX_HI_REG           ({`CORE_BLOCK_1, `COUNTER_BLOCK_ADDR, `CLK_SYN_1_TX_HI})
 `define CLK_SYN_1_RX_LO_REG           ({`CORE_BLOCK_1, `COUNTER_BLOCK_ADDR, `CLK_SYN_1_RX_LO})
 `define CLK_SYN_1_RX_HI_REG           ({`CORE_BLOCK_1, `COUNTER_BLOCK_ADDR, `CLK_SYN_1_RX_HI})

 `define CLK_SYN_2_COUNTER_RESET_REG   ({`CORE_BLOCK_1, `COUNTER_BLOCK_ADDR, `CLK_SYN_2_COUNTER_RESET})
 `define CLK_SYN_2_TX_LO_REG           ({`CORE_BLOCK_1, `COUNTER_BLOCK_ADDR, `CLK_SYN_2_TX_LO})
 `define CLK_SYN_2_TX_HI_REG           ({`CORE_BLOCK_1, `COUNTER_BLOCK_ADDR, `CLK_SYN_2_TX_HI})
 `define CLK_SYN_2_RX_LO_REG           ({`CORE_BLOCK_1, `COUNTER_BLOCK_ADDR, `CLK_SYN_2_RX_LO})
 `define CLK_SYN_2_RX_HI_REG           ({`CORE_BLOCK_1, `COUNTER_BLOCK_ADDR, `CLK_SYN_2_RX_HI})


 `define CLK_SYN_3_COUNTER_RESET_REG   ({`CORE_BLOCK_1, `COUNTER_BLOCK_ADDR, `CLK_SYN_3_COUNTER_RESET})
 `define CLK_SYN_3_TX_LO_REG           ({`CORE_BLOCK_1, `COUNTER_BLOCK_ADDR, `CLK_SYN_3_TX_LO})
 `define CLK_SYN_3_TX_HI_REG           ({`CORE_BLOCK_1, `COUNTER_BLOCK_ADDR, `CLK_SYN_3_TX_HI})
 `define CLK_SYN_3_RX_LO_REG           ({`CORE_BLOCK_1, `COUNTER_BLOCK_ADDR, `CLK_SYN_3_RX_LO})
 `define CLK_SYN_3_RX_HI_REG           ({`CORE_BLOCK_1, `COUNTER_BLOCK_ADDR, `CLK_SYN_3_RX_HI})

 `define PTP_VALID_RX_REG              ({`CORE_BLOCK_1, `COUNTER_BLOCK_ADDR, `PTP_VALID_RX})
 `define PTP_VALID_TX_REG              ({`CORE_BLOCK_1, `COUNTER_BLOCK_ADDR, `PTP_VALID_TX})
 `define PTP_MASK_RX_REG               ({`CORE_BLOCK_1, `COUNTER_BLOCK_ADDR, `PTP_MASK_RX})
 `define PTP_MASK_TX_REG               ({`CORE_BLOCK_1, `COUNTER_BLOCK_ADDR, `PTP_MASK_TX})
 `define PTP_ENABLE_MASK_RX_REG        ({`CORE_BLOCK_1, `COUNTER_BLOCK_ADDR, `PTP_ENABLE_MASK_RX})
 `define PTP_ENABLE_MASK_TX_REG        ({`CORE_BLOCK_1, `COUNTER_BLOCK_ADDR, `PTP_ENABLE_MASK_TX})

 `define CLK_TEST_TICKS_REG            ({`CORE_BLOCK_2, `CLK_TEST_BLOCK_ADDR, `CLK_TEST_TICKS})

 `define SERIAL_TEST_CONTROL_0_REG     ({`CORE_BLOCK_2, `SERIAL_TEST_BLOCK_ADDR, `SERIAL_TEST_CONTROL_0})
 `define SERIAL_TEST_STATUS_0_REG      ({`CORE_BLOCK_2, `SERIAL_TEST_BLOCK_ADDR, `SERIAL_TEST_STATUS_0})
 `define SERIAL_TEST_NUM_FRAMES_SENT_0_LO_REG ({`CORE_BLOCK_2, `SERIAL_TEST_BLOCK_ADDR, `SERIAL_TEST_NUM_FRAMES_SENT_0_LO})
 `define SERIAL_TEST_NUM_FRAMES_RCVD_0_LO_REG ({`CORE_BLOCK_2, `SERIAL_TEST_BLOCK_ADDR, `SERIAL_TEST_NUM_FRAMES_RCVD_0_LO})
 `define SERIAL_TEST_NUM_FRAMES_SENT_0_HI_REG ({`CORE_BLOCK_2, `SERIAL_TEST_BLOCK_ADDR, `SERIAL_TEST_NUM_FRAMES_SENT_0_HI})
 `define SERIAL_TEST_NUM_FRAMES_RCVD_0_HI_REG ({`CORE_BLOCK_2, `SERIAL_TEST_BLOCK_ADDR, `SERIAL_TEST_NUM_FRAMES_RCVD_0_HI})
 `define SERIAL_TEST_CONTROL_1_REG     ({`CORE_BLOCK_2, `SERIAL_TEST_BLOCK_ADDR, `SERIAL_TEST_CONTROL_1})
 `define SERIAL_TEST_STATUS_1_REG      ({`CORE_BLOCK_2, `SERIAL_TEST_BLOCK_ADDR, `SERIAL_TEST_STATUS_1})
 `define SERIAL_TEST_NUM_FRAMES_SENT_1_LO_REG ({`CORE_BLOCK_2, `SERIAL_TEST_BLOCK_ADDR, `SERIAL_TEST_NUM_FRAMES_SENT_1_LO})
 `define SERIAL_TEST_NUM_FRAMES_RCVD_1_LO_REG ({`CORE_BLOCK_2, `SERIAL_TEST_BLOCK_ADDR, `SERIAL_TEST_NUM_FRAMES_RCVD_1_LO})
 `define SERIAL_TEST_NUM_FRAMES_SENT_1_HI_REG ({`CORE_BLOCK_2, `SERIAL_TEST_BLOCK_ADDR, `SERIAL_TEST_NUM_FRAMES_SENT_1_HI})
 `define SERIAL_TEST_NUM_FRAMES_RCVD_1_HI_REG ({`CORE_BLOCK_2, `SERIAL_TEST_BLOCK_ADDR, `SERIAL_TEST_NUM_FRAMES_RCVD_1_HI})
 `define SERIAL_TEST_CTRL_REG          ({`CORE_BLOCK_2, `SERIAL_TEST_BLOCK_ADDR, `SERIAL_TEST_CTRL})
 `define SERIAL_TEST_STAT_REG          ({`CORE_BLOCK_2, `SERIAL_TEST_BLOCK_ADDR, `SERIAL_TEST_STAT})

 `define SRAM_LSB_1_BASE_ADDR          ({{(`CPCI_NF2_ADDR_WIDTH-`SRAM_BLOCK_ADDR_WIDTH-`SRAM_REG_ADDR_WIDTH){1'b0}}, `SRAM_BLOCK_ADDR, `SRAM_LSB_1_BLOCK_ADDR, {`SRAM_LSB_REG_ADDR_WIDTH{1'b0}}})
 `define SRAM_LSB_2_BASE_ADDR          ({{(`CPCI_NF2_ADDR_WIDTH-`SRAM_BLOCK_ADDR_WIDTH-`SRAM_REG_ADDR_WIDTH){1'b0}}, `SRAM_BLOCK_ADDR, `SRAM_LSB_2_BLOCK_ADDR, {`SRAM_LSB_REG_ADDR_WIDTH{1'b0}}})

 `define SRAM_MSB_SRAM1_RD_REG         ({`CORE_BLOCK_2, `SRAM_MSB_BLOCK_ADDR, `SRAM_MSB_SRAM1_RD})
 `define SRAM_MSB_SRAM1_WR_REG         ({`CORE_BLOCK_2, `SRAM_MSB_BLOCK_ADDR, `SRAM_MSB_SRAM1_WR})
 `define SRAM_MSB_SRAM2_RD_REG         ({`CORE_BLOCK_2, `SRAM_MSB_BLOCK_ADDR, `SRAM_MSB_SRAM2_RD})
 `define SRAM_MSB_SRAM2_WR_REG         ({`CORE_BLOCK_2, `SRAM_MSB_BLOCK_ADDR, `SRAM_MSB_SRAM2_WR})

 `define SRAM_TEST_ERR_CNT_REG         ({`CORE_BLOCK_2, `SRAM_TEST_BLOCK_ADDR, `SRAM_TEST_ERR_CNT})
 `define SRAM_TEST_ITER_NUM_REG        ({`CORE_BLOCK_2, `SRAM_TEST_BLOCK_ADDR, `SRAM_TEST_ITER_NUM})
 `define SRAM_TEST_BAD_RUNS_REG        ({`CORE_BLOCK_2, `SRAM_TEST_BLOCK_ADDR, `SRAM_TEST_BAD_RUNS})
 `define SRAM_TEST_GOOD_RUNS_REG       ({`CORE_BLOCK_2, `SRAM_TEST_BLOCK_ADDR, `SRAM_TEST_GOOD_RUNS})
 `define SRAM_TEST_STATUS_REG          ({`CORE_BLOCK_2, `SRAM_TEST_BLOCK_ADDR, `SRAM_TEST_STATUS})
 `define SRAM_TEST_EN_REG              ({`CORE_BLOCK_2, `SRAM_TEST_BLOCK_ADDR, `SRAM_TEST_EN})
 `define SRAM_TEST_CTRL_REG            ({`CORE_BLOCK_2, `SRAM_TEST_BLOCK_ADDR, `SRAM_TEST_CTRL})
 `define SRAM_TEST_RAND_SEED_1_REG     ({`CORE_BLOCK_2, `SRAM_TEST_BLOCK_ADDR, `SRAM_TEST_RAND_SEED_1})
 `define SRAM_TEST_RAND_SEED_2_REG     ({`CORE_BLOCK_2, `SRAM_TEST_BLOCK_ADDR, `SRAM_TEST_RAND_SEED_2})

 `define SRAM_TEST_LOG_OFFSET          ({{(`CPCI_NF2_ADDR_WIDTH-`DRAM_TEST_REG_ADDR_WIDTH){1'b0}}, `SRAM_TEST_REG_ADDR_WIDTH'h0008})

 `define SRAM_TEST_LOG_ADDR_REG        ({`CORE_BLOCK_2, `SRAM_TEST_BLOCK_ADDR, `SRAM_TEST_LOG_ADDR})
 `define SRAM_TEST_LOG_EXP_DATA_HI_REG ({`CORE_BLOCK_2, `SRAM_TEST_BLOCK_ADDR, `SRAM_TEST_LOG_EXP_DATA_HI})
 `define SRAM_TEST_LOG_EXP_DATA_LO_REG ({`CORE_BLOCK_2, `SRAM_TEST_BLOCK_ADDR, `SRAM_TEST_LOG_EXP_DATA_LO})
 `define SRAM_TEST_LOG_RD_DATA_HI_REG  ({`CORE_BLOCK_2, `SRAM_TEST_BLOCK_ADDR, `SRAM_TEST_LOG_RD_DATA_HI})
 `define SRAM_TEST_LOG_RD_DATA_LO_REG  ({`CORE_BLOCK_2, `SRAM_TEST_BLOCK_ADDR, `SRAM_TEST_LOG_RD_DATA_LO})

 `define DRAM_TEST_ERR_CNT_REG         ({`CORE_BLOCK_2, `DRAM_TEST_BLOCK_ADDR, `DRAM_TEST_ERR_CNT})
 `define DRAM_TEST_ITER_NUM_REG        ({`CORE_BLOCK_2, `DRAM_TEST_BLOCK_ADDR, `DRAM_TEST_ITER_NUM})
 `define DRAM_TEST_BAD_RUNS_REG        ({`CORE_BLOCK_2, `DRAM_TEST_BLOCK_ADDR, `DRAM_TEST_BAD_RUNS})
 `define DRAM_TEST_GOOD_RUNS_REG       ({`CORE_BLOCK_2, `DRAM_TEST_BLOCK_ADDR, `DRAM_TEST_GOOD_RUNS})
 `define DRAM_TEST_STATUS_REG          ({`CORE_BLOCK_2, `DRAM_TEST_BLOCK_ADDR, `DRAM_TEST_STATUS})
 `define DRAM_TEST_EN_REG              ({`CORE_BLOCK_2, `DRAM_TEST_BLOCK_ADDR, `DRAM_TEST_EN})
 `define DRAM_TEST_CTRL_REG            ({`CORE_BLOCK_2, `DRAM_TEST_BLOCK_ADDR, `DRAM_TEST_CTRL})
 `define DRAM_TEST_RAND_SEED_REG       ({`CORE_BLOCK_2, `DRAM_TEST_BLOCK_ADDR, `DRAM_TEST_RAND_SEED})

 `define DRAM_TEST_LOG_OFFSET          ({{(`CPCI_NF2_ADDR_WIDTH-`DRAM_TEST_REG_ADDR_WIDTH){1'b0}}, `DRAM_TEST_REG_ADDR_WIDTH'h0008})

 `define DRAM_TEST_LOG_ADDR_REG        ({`CORE_BLOCK_2, `DRAM_TEST_BLOCK_ADDR, `DRAM_TEST_LOG_ADDR})
 `define DRAM_TEST_LOG_EXP_DATA_HI_REG ({`CORE_BLOCK_2, `DRAM_TEST_BLOCK_ADDR, `DRAM_TEST_LOG_EXP_DATA_HI})
 `define DRAM_TEST_LOG_EXP_DATA_LO_REG ({`CORE_BLOCK_2, `DRAM_TEST_BLOCK_ADDR, `DRAM_TEST_LOG_EXP_DATA_LO})
 `define DRAM_TEST_LOG_RD_DATA_HI_REG  ({`CORE_BLOCK_2, `DRAM_TEST_BLOCK_ADDR, `DRAM_TEST_LOG_RD_DATA_HI})
 `define DRAM_TEST_LOG_RD_DATA_LO_REG  ({`CORE_BLOCK_2, `DRAM_TEST_BLOCK_ADDR, `DRAM_TEST_LOG_RD_DATA_LO})


 `define PHY_TEST_GEN_STATUS             (`PHY_TEST_GENERAL_BASE | `PHY_TEST_STATUS)
 `define PHY_TEST_GEN_CTRL               (`PHY_TEST_GENERAL_BASE | `PHY_TEST_CTRL)
 `define PHY_TEST_GEN_SIZE               (`PHY_TEST_GENERAL_BASE | `PHY_TEST_SIZE)
 `define PHY_TEST_GEN_PATTERN            (`PHY_TEST_GENERAL_BASE | `PHY_TEST_PATTERN)
 `define PHY_TEST_GEN_INIT_SEQ_NO        (`PHY_TEST_GENERAL_BASE | `PHY_TEST_INIT_SEQ_NO)


 `define PHY_TEST_PHY_0_TX_STATUS        (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_0_BASE | `PHY_TEST_TX_BASE | `PHY_TEST_TX_STATUS)
 `define PHY_TEST_PHY_0_TX_ITER_CNT      (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_0_BASE | `PHY_TEST_TX_BASE | `PHY_TEST_TX_ITER_CNT)
 `define PHY_TEST_PHY_0_TX_PKT_CNT       (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_0_BASE | `PHY_TEST_TX_BASE | `PHY_TEST_TX_PKT_CNT)
 `define PHY_TEST_PHY_0_TX_SEQ_NO        (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_0_BASE | `PHY_TEST_TX_BASE | `PHY_TEST_TX_SEQ_NO)
 `define PHY_TEST_PHY_0_TX_RAND_SEED     (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_0_BASE | `PHY_TEST_TX_BASE | `PHY_TEST_TX_RAND_SEED)

 `define PHY_TEST_PHY_0_RX_STATUS        (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_0_BASE | `PHY_TEST_RX_BASE | `PHY_TEST_RX_STATUS)
 `define PHY_TEST_PHY_0_RX_GOOD_PKT_CNT  (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_0_BASE | `PHY_TEST_RX_BASE | `PHY_TEST_RX_GOOD_PKT_CNT)
 `define PHY_TEST_PHY_0_RX_ERR_PKT_CNT   (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_0_BASE | `PHY_TEST_RX_BASE | `PHY_TEST_RX_ERR_PKT_CNT)
 `define PHY_TEST_PHY_0_RX_SEQ_NO        (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_0_BASE | `PHY_TEST_RX_BASE | `PHY_TEST_RX_SEQ_NO)
 `define PHY_TEST_PHY_0_RX_CTRL          (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_0_BASE | `PHY_TEST_RX_BASE | `PHY_TEST_RX_CTRL)

 `define PHY_TEST_PHY_0_RX_LOG_STATUS    (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_0_BASE | `PHY_TEST_RX_LOG_BASE | `PHY_TEST_RX_LOG_STATUS)
 `define PHY_TEST_PHY_0_RX_LOG_EXP_DATA  (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_0_BASE | `PHY_TEST_RX_LOG_BASE | `PHY_TEST_RX_LOG_EXP_DATA)
 `define PHY_TEST_PHY_0_RX_LOG_RX_DATA   (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_0_BASE | `PHY_TEST_RX_LOG_BASE | `PHY_TEST_RX_LOG_RX_DATA)
 `define PHY_TEST_PHY_0_RX_LOG_CTRL      (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_0_BASE | `PHY_TEST_RX_LOG_BASE | `PHY_TEST_RX_LOG_CTRL)


 `define PHY_TEST_PHY_1_TX_STATUS        (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_1_BASE | `PHY_TEST_TX_BASE | `PHY_TEST_TX_STATUS)
 `define PHY_TEST_PHY_1_TX_ITER_CNT      (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_1_BASE | `PHY_TEST_TX_BASE | `PHY_TEST_TX_ITER_CNT)
 `define PHY_TEST_PHY_1_TX_PKT_CNT       (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_1_BASE | `PHY_TEST_TX_BASE | `PHY_TEST_TX_PKT_CNT)
 `define PHY_TEST_PHY_1_TX_SEQ_NO        (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_1_BASE | `PHY_TEST_TX_BASE | `PHY_TEST_TX_SEQ_NO)
 `define PHY_TEST_PHY_1_TX_RAND_SEED     (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_1_BASE | `PHY_TEST_TX_BASE | `PHY_TEST_TX_RAND_SEED)

 `define PHY_TEST_PHY_1_RX_STATUS        (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_1_BASE | `PHY_TEST_RX_BASE | `PHY_TEST_RX_STATUS)
 `define PHY_TEST_PHY_1_RX_GOOD_PKT_CNT  (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_1_BASE | `PHY_TEST_RX_BASE | `PHY_TEST_RX_GOOD_PKT_CNT)
 `define PHY_TEST_PHY_1_RX_ERR_PKT_CNT   (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_1_BASE | `PHY_TEST_RX_BASE | `PHY_TEST_RX_ERR_PKT_CNT)
 `define PHY_TEST_PHY_1_RX_SEQ_NO        (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_1_BASE | `PHY_TEST_RX_BASE | `PHY_TEST_RX_SEQ_NO)
 `define PHY_TEST_PHY_1_RX_CTRL          (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_1_BASE | `PHY_TEST_RX_BASE | `PHY_TEST_RX_CTRL)

 `define PHY_TEST_PHY_1_RX_LOG_STATUS    (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_1_BASE | `PHY_TEST_RX_LOG_BASE | `PHY_TEST_RX_LOG_STATUS)
 `define PHY_TEST_PHY_1_RX_LOG_EXP_DATA  (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_1_BASE | `PHY_TEST_RX_LOG_BASE | `PHY_TEST_RX_LOG_EXP_DATA)
 `define PHY_TEST_PHY_1_RX_LOG_RX_DATA   (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_1_BASE | `PHY_TEST_RX_LOG_BASE | `PHY_TEST_RX_LOG_RX_DATA)
 `define PHY_TEST_PHY_1_RX_LOG_CTRL      (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_1_BASE | `PHY_TEST_RX_LOG_BASE | `PHY_TEST_RX_LOG_CTRL)


 `define PHY_TEST_PHY_2_TX_STATUS        (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_2_BASE | `PHY_TEST_TX_BASE | `PHY_TEST_TX_STATUS)
 `define PHY_TEST_PHY_2_TX_ITER_CNT      (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_2_BASE | `PHY_TEST_TX_BASE | `PHY_TEST_TX_ITER_CNT)
 `define PHY_TEST_PHY_2_TX_PKT_CNT       (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_2_BASE | `PHY_TEST_TX_BASE | `PHY_TEST_TX_PKT_CNT)
 `define PHY_TEST_PHY_2_TX_SEQ_NO        (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_2_BASE | `PHY_TEST_TX_BASE | `PHY_TEST_TX_SEQ_NO)
 `define PHY_TEST_PHY_2_TX_RAND_SEED     (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_2_BASE | `PHY_TEST_TX_BASE | `PHY_TEST_TX_RAND_SEED)

 `define PHY_TEST_PHY_2_RX_STATUS        (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_2_BASE | `PHY_TEST_RX_BASE | `PHY_TEST_RX_STATUS)
 `define PHY_TEST_PHY_2_RX_GOOD_PKT_CNT  (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_2_BASE | `PHY_TEST_RX_BASE | `PHY_TEST_RX_GOOD_PKT_CNT)
 `define PHY_TEST_PHY_2_RX_ERR_PKT_CNT   (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_2_BASE | `PHY_TEST_RX_BASE | `PHY_TEST_RX_ERR_PKT_CNT)
 `define PHY_TEST_PHY_2_RX_SEQ_NO        (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_2_BASE | `PHY_TEST_RX_BASE | `PHY_TEST_RX_SEQ_NO)
 `define PHY_TEST_PHY_2_RX_CTRL          (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_2_BASE | `PHY_TEST_RX_BASE | `PHY_TEST_RX_CTRL)

 `define PHY_TEST_PHY_2_RX_LOG_STATUS    (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_2_BASE | `PHY_TEST_RX_LOG_BASE | `PHY_TEST_RX_LOG_STATUS)
 `define PHY_TEST_PHY_2_RX_LOG_EXP_DATA  (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_2_BASE | `PHY_TEST_RX_LOG_BASE | `PHY_TEST_RX_LOG_EXP_DATA)
 `define PHY_TEST_PHY_2_RX_LOG_RX_DATA   (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_2_BASE | `PHY_TEST_RX_LOG_BASE | `PHY_TEST_RX_LOG_RX_DATA)
 `define PHY_TEST_PHY_2_RX_LOG_CTRL      (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_2_BASE | `PHY_TEST_RX_LOG_BASE | `PHY_TEST_RX_LOG_CTRL)


 `define PHY_TEST_PHY_3_TX_STATUS        (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_3_BASE | `PHY_TEST_TX_BASE | `PHY_TEST_TX_STATUS)
 `define PHY_TEST_PHY_3_TX_ITER_CNT      (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_3_BASE | `PHY_TEST_TX_BASE | `PHY_TEST_TX_ITER_CNT)
 `define PHY_TEST_PHY_3_TX_PKT_CNT       (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_3_BASE | `PHY_TEST_TX_BASE | `PHY_TEST_TX_PKT_CNT)
 `define PHY_TEST_PHY_3_TX_SEQ_NO        (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_3_BASE | `PHY_TEST_TX_BASE | `PHY_TEST_TX_SEQ_NO)
 `define PHY_TEST_PHY_3_TX_RAND_SEED     (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_3_BASE | `PHY_TEST_TX_BASE | `PHY_TEST_TX_RAND_SEED)

 `define PHY_TEST_PHY_3_RX_STATUS        (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_3_BASE | `PHY_TEST_RX_BASE | `PHY_TEST_RX_STATUS)
 `define PHY_TEST_PHY_3_RX_GOOD_PKT_CNT  (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_3_BASE | `PHY_TEST_RX_BASE | `PHY_TEST_RX_GOOD_PKT_CNT)
 `define PHY_TEST_PHY_3_RX_ERR_PKT_CNT   (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_3_BASE | `PHY_TEST_RX_BASE | `PHY_TEST_RX_ERR_PKT_CNT)
 `define PHY_TEST_PHY_3_RX_SEQ_NO        (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_3_BASE | `PHY_TEST_RX_BASE | `PHY_TEST_RX_SEQ_NO)
 `define PHY_TEST_PHY_3_RX_CTRL          (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_3_BASE | `PHY_TEST_RX_BASE | `PHY_TEST_RX_CTRL)

 `define PHY_TEST_PHY_3_RX_LOG_STATUS    (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_3_BASE | `PHY_TEST_RX_LOG_BASE | `PHY_TEST_RX_LOG_STATUS)
 `define PHY_TEST_PHY_3_RX_LOG_EXP_DATA  (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_3_BASE | `PHY_TEST_RX_LOG_BASE | `PHY_TEST_RX_LOG_EXP_DATA)
 `define PHY_TEST_PHY_3_RX_LOG_RX_DATA   (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_3_BASE | `PHY_TEST_RX_LOG_BASE | `PHY_TEST_RX_LOG_RX_DATA)
 `define PHY_TEST_PHY_3_RX_LOG_CTRL      (`PHY_TEST_PORTS_BASE | `PHY_TEST_PORT_3_BASE | `PHY_TEST_RX_LOG_BASE | `PHY_TEST_RX_LOG_CTRL)

 `define PHY_TEST_PORT_OFFSET            ({{(`CPCI_NF2_ADDR_WIDTH-`PHY_TEST_REG_ADDR_WIDTH){1'b0}}, (`PHY_TEST_PORT_1_BASE - `PHY_TEST_PORT_0_BASE)})

 `define PHY_TEST_STATUS_REG                 ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_GEN_STATUS})
 `define PHY_TEST_CTRL_REG                   ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_GEN_CTRL})
 `define PHY_TEST_SIZE_REG                   ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_GEN_SIZE})
 `define PHY_TEST_PATTERN_REG                ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_GEN_PATTERN})
 `define PHY_TEST_INIT_SEQ_NO_REG            ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_GEN_INIT_SEQ_NO})

 `define PHY_TEST_PHY_0_TX_STATUS_REG        ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_0_TX_STATUS})
 `define PHY_TEST_PHY_0_TX_ITER_CNT_REG      ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_0_TX_ITER_CNT})
 `define PHY_TEST_PHY_0_TX_PKT_CNT_REG       ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_0_TX_PKT_CNT})
 `define PHY_TEST_PHY_0_TX_SEQ_NO_REG        ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_0_TX_SEQ_NO})
 `define PHY_TEST_PHY_0_TX_RAND_SEED_REG     ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_0_TX_RAND_SEED})

 `define PHY_TEST_PHY_0_RX_STATUS_REG        ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_0_RX_STATUS})
 `define PHY_TEST_PHY_0_RX_GOOD_PKT_CNT_REG  ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_0_RX_GOOD_PKT_CNT})
 `define PHY_TEST_PHY_0_RX_ERR_PKT_CNT_REG   ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_0_RX_ERR_PKT_CNT})
 `define PHY_TEST_PHY_0_RX_SEQ_NO_REG        ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_0_RX_SEQ_NO})
 `define PHY_TEST_PHY_0_RX_CTRL_REG          ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_0_RX_CTRL})

 `define PHY_TEST_PHY_0_RX_LOG_STATUS_REG    ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_0_RX_LOG_STATUS})
 `define PHY_TEST_PHY_0_RX_LOG_EXP_DATA_REG  ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_0_RX_LOG_EXP_DATA})
 `define PHY_TEST_PHY_0_RX_LOG_RX_DATA_REG   ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_0_RX_LOG_RX_DATA})
 `define PHY_TEST_PHY_0_RX_LOG_CTRL_REG      ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_0_RX_LOG_CTRL})


 `define PHY_TEST_PHY_1_TX_STATUS_REG        ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_1_TX_STATUS})
 `define PHY_TEST_PHY_1_TX_ITER_CNT_REG      ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_1_TX_ITER_CNT})
 `define PHY_TEST_PHY_1_TX_PKT_CNT_REG       ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_1_TX_PKT_CNT})
 `define PHY_TEST_PHY_1_TX_SEQ_NO_REG        ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_1_TX_SEQ_NO})
 `define PHY_TEST_PHY_1_TX_RAND_SEED_REG     ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_1_TX_RAND_SEED})

 `define PHY_TEST_PHY_1_RX_STATUS_REG        ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_1_RX_STATUS})
 `define PHY_TEST_PHY_1_RX_GOOD_PKT_CNT_REG  ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_1_RX_GOOD_PKT_CNT})
 `define PHY_TEST_PHY_1_RX_ERR_PKT_CNT_REG   ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_1_RX_ERR_PKT_CNT})
 `define PHY_TEST_PHY_1_RX_SEQ_NO_REG        ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_1_RX_SEQ_NO})
 `define PHY_TEST_PHY_1_RX_CTRL_REG          ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_1_RX_CTRL})

 `define PHY_TEST_PHY_1_RX_LOG_STATUS_REG    ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_1_RX_LOG_STATUS})
 `define PHY_TEST_PHY_1_RX_LOG_EXP_DATA_REG  ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_1_RX_LOG_EXP_DATA})
 `define PHY_TEST_PHY_1_RX_LOG_RX_DATA_REG   ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_1_RX_LOG_RX_DATA})
 `define PHY_TEST_PHY_1_RX_LOG_CTRL_REG      ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_1_RX_LOG_CTRL})


 `define PHY_TEST_PHY_2_TX_STATUS_REG        ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_2_TX_STATUS})
 `define PHY_TEST_PHY_2_TX_ITER_CNT_REG      ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_2_TX_ITER_CNT})
 `define PHY_TEST_PHY_2_TX_PKT_CNT_REG       ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_2_TX_PKT_CNT})
 `define PHY_TEST_PHY_2_TX_SEQ_NO_REG        ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_2_TX_SEQ_NO})
 `define PHY_TEST_PHY_2_TX_RAND_SEED_REG     ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_2_TX_RAND_SEED})

 `define PHY_TEST_PHY_2_RX_STATUS_REG        ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_2_RX_STATUS})
 `define PHY_TEST_PHY_2_RX_GOOD_PKT_CNT_REG  ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_2_RX_GOOD_PKT_CNT})
 `define PHY_TEST_PHY_2_RX_ERR_PKT_CNT_REG   ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_2_RX_ERR_PKT_CNT})
 `define PHY_TEST_PHY_2_RX_SEQ_NO_REG        ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_2_RX_SEQ_NO})
 `define PHY_TEST_PHY_2_RX_CTRL_REG          ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_2_RX_CTRL})

 `define PHY_TEST_PHY_2_RX_LOG_STATUS_REG    ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_2_RX_LOG_STATUS})
 `define PHY_TEST_PHY_2_RX_LOG_EXP_DATA_REG  ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_2_RX_LOG_EXP_DATA})
 `define PHY_TEST_PHY_2_RX_LOG_RX_DATA_REG   ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_2_RX_LOG_RX_DATA})
 `define PHY_TEST_PHY_2_RX_LOG_CTRL_REG      ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_2_RX_LOG_CTRL})


 `define PHY_TEST_PHY_3_TX_STATUS_REG        ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_3_TX_STATUS})
 `define PHY_TEST_PHY_3_TX_ITER_CNT_REG      ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_3_TX_ITER_CNT})
 `define PHY_TEST_PHY_3_TX_PKT_CNT_REG       ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_3_TX_PKT_CNT})
 `define PHY_TEST_PHY_3_TX_SEQ_NO_REG        ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_3_TX_SEQ_NO})
 `define PHY_TEST_PHY_3_TX_RAND_SEED_REG     ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_3_TX_RAND_SEED})

 `define PHY_TEST_PHY_3_RX_STATUS_REG        ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_3_RX_STATUS})
 `define PHY_TEST_PHY_3_RX_GOOD_PKT_CNT_REG  ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_3_RX_GOOD_PKT_CNT})
 `define PHY_TEST_PHY_3_RX_ERR_PKT_CNT_REG   ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_3_RX_ERR_PKT_CNT})
 `define PHY_TEST_PHY_3_RX_SEQ_NO_REG        ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_3_RX_SEQ_NO})
 `define PHY_TEST_PHY_3_RX_CTRL_REG          ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_3_RX_CTRL})

 `define PHY_TEST_PHY_3_RX_LOG_STATUS_REG    ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_3_RX_LOG_STATUS})
 `define PHY_TEST_PHY_3_RX_LOG_EXP_DATA_REG  ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_3_RX_LOG_EXP_DATA})
 `define PHY_TEST_PHY_3_RX_LOG_RX_DATA_REG   ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_3_RX_LOG_RX_DATA})
 `define PHY_TEST_PHY_3_RX_LOG_CTRL_REG      ({`CORE_BLOCK_2, `PHY_TEST_BLOCK_ADDR, `PHY_TEST_PHY_3_RX_LOG_CTRL})


/*********************************************************
 * useful macros
 *********************************************************/
 `define REG_END(addr_num)   `CPCI_NF2_DATA_WIDTH*((addr_num)+1)-1
 `define REG_START(addr_num) `CPCI_NF2_DATA_WIDTH*(addr_num)

 // Extract a word of width "width" from a flat bus
 //
 // Note: word 0 is assumed to occupy the LSBs of the bus
 `define WORD(word, width)    (word) * (width) +: (width)
 `define WORD2(word, width)    (word) * (width) + 0


 // 5- print the reg name and addr in C format
 `define PRINT_REG_ADDRESSES                                                                                                                                          \
         $fwrite(c_reg_defines_fd, "#define TX_QUEUE_DISABLE_BIT_NUM                  %d\n", `TX_QUEUE_DISABLE_BIT_NUM);                                              \
         $fwrite(c_reg_defines_fd, "#define RX_QUEUE_DISABLE_BIT_NUM                  %d\n", `RX_QUEUE_DISABLE_BIT_NUM);                                              \
         $fwrite(c_reg_defines_fd, "#define RESET_MAC_BIT_NUM                         %d\n", `RESET_MAC_BIT_NUM);                                                     \
         $fwrite(c_reg_defines_fd, "#define MAC_DISABLE_TX_BIT_NUM                    %d\n", `MAC_DISABLE_TX_BIT_NUM);                                                \
         $fwrite(c_reg_defines_fd, "#define MAC_DISABLE_RX_BIT_NUM                    %d\n", `MAC_DISABLE_RX_BIT_NUM);                                                \
         $fwrite(c_reg_defines_fd, "#define MAC_DIS_JUMBO_TX_BIT_NUM                  %d\n", `MAC_DIS_JUMBO_TX_BIT_NUM);                                              \
         $fwrite(c_reg_defines_fd, "#define MAC_DIS_JUMBO_RX_BIT_NUM                  %d\n", `MAC_DIS_JUMBO_RX_BIT_NUM);                                              \
         $fwrite(c_reg_defines_fd, "#define MAC_DIS_CRC_CHECK                         %d\n", `MAC_DIS_CRC_CHECK);                                                     \
         $fwrite(c_reg_defines_fd, "#define MAC_DIS_CRC_GEN                           %d\n\n", `MAC_DIS_CRC_GEN);                                                     \
                                                                                                                                                                      \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define DEVICE_MD5_1_REG                                     0x%07x\n", `DEVICE_MD5_1_REG<<2);                                    \
         $fwrite(c_reg_defines_fd, "#define DEVICE_MD5_2_REG                                     0x%07x\n", `DEVICE_MD5_2_REG<<2);                                    \
         $fwrite(c_reg_defines_fd, "#define DEVICE_MD5_3_REG                                     0x%07x\n", `DEVICE_MD5_3_REG<<2);                                    \
         $fwrite(c_reg_defines_fd, "#define DEVICE_MD5_4_REG                                     0x%07x\n", `DEVICE_MD5_4_REG<<2);                                    \
         $fwrite(c_reg_defines_fd, "#define DEVICE_ID_REG                                        0x%07x\n", `DEVICE_ID_REG<<2);                                       \
         $fwrite(c_reg_defines_fd, "#define DEVICE_REVISION_REG                                  0x%07x\n", `DEVICE_REVISION_REG<<2);                                 \
         $fwrite(c_reg_defines_fd, "#define DEVICE_CPCI_ID_REG                                   0x%07x\n", `DEVICE_CPCI_ID_REG<<2);                                  \
         $fwrite(c_reg_defines_fd, "#define DEVICE_STR_REG                                       0x%07x\n\n", `DEVICE_STR_REG<<2);                                    \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define DEVICE_MD5_1_VAL                                     0x%08x\n", `DEV_ID_MD5_1_VAL);                                       \
         $fwrite(c_reg_defines_fd, "#define DEVICE_MD5_2_VAL                                     0x%08x\n", `DEV_ID_MD5_2_VAL);                                       \
         $fwrite(c_reg_defines_fd, "#define DEVICE_MD5_3_VAL                                     0x%08x\n", `DEV_ID_MD5_3_VAL);                                       \
         $fwrite(c_reg_defines_fd, "#define DEVICE_MD5_4_VAL                                     0x%08x\n\n", `DEV_ID_MD5_4_VAL);                                     \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define SRAM_BASE_ADDR_REG                                   0x%07x\n", `SRAM_BASE_ADDR_REG<<2);                                  \
         $fwrite(c_reg_defines_fd, "#define SRAM_ADDR_WIDTH                                      %7d\n\n", `SRAM_ADDR_WIDTH);                                         \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define MAC_GRP_0_CONTROL_REG                                0x%07x\n", `MAC_GRP_0_CONTROL_REG<<2);                               \
         $fwrite(c_reg_defines_fd, "#define RX_QUEUE_0_NUM_PKTS_STORED_REG                       0x%07x\n", `RX_QUEUE_0_NUM_PKTS_STORED_REG<<2);                      \
         $fwrite(c_reg_defines_fd, "#define RX_QUEUE_0_NUM_PKTS_DROPPED_FULL_REG                 0x%07x\n", `RX_QUEUE_0_NUM_PKTS_DROPPED_FULL_REG<<2);                \
         $fwrite(c_reg_defines_fd, "#define RX_QUEUE_0_NUM_PKTS_DROPPED_BAD_REG                  0x%07x\n", `RX_QUEUE_0_NUM_PKTS_DROPPED_BAD_REG<<2);                 \
         $fwrite(c_reg_defines_fd, "#define RX_QUEUE_0_NUM_WORDS_PUSHED_REG                      0x%07x\n", `RX_QUEUE_0_NUM_WORDS_PUSHED_REG<<2);                     \
         $fwrite(c_reg_defines_fd, "#define RX_QUEUE_0_NUM_BYTES_PUSHED_REG                      0x%07x\n", `RX_QUEUE_0_NUM_BYTES_PUSHED_REG<<2);                     \
         $fwrite(c_reg_defines_fd, "#define RX_QUEUE_0_NUM_PKTS_DEQUEUED_REG                     0x%07x\n", `RX_QUEUE_0_NUM_PKTS_DEQUEUED_REG<<2);                    \
         $fwrite(c_reg_defines_fd, "#define RX_QUEUE_0_NUM_PKTS_IN_QUEUE_REG                     0x%07x\n", `RX_QUEUE_0_NUM_PKTS_IN_QUEUE_REG<<2);                    \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define TX_QUEUE_0_NUM_PKTS_IN_QUEUE_REG                     0x%07x\n", `TX_QUEUE_0_NUM_PKTS_IN_QUEUE_REG<<2);                    \
         $fwrite(c_reg_defines_fd, "#define TX_QUEUE_0_NUM_PKTS_SENT_REG                         0x%07x\n", `TX_QUEUE_0_NUM_PKTS_SENT_REG<<2);                        \
         $fwrite(c_reg_defines_fd, "#define TX_QUEUE_0_NUM_WORDS_PUSHED_REG                      0x%07x\n", `TX_QUEUE_0_NUM_WORDS_PUSHED_REG<<2);                     \
         $fwrite(c_reg_defines_fd, "#define TX_QUEUE_0_NUM_BYTES_PUSHED_REG                      0x%07x\n", `TX_QUEUE_0_NUM_BYTES_PUSHED_REG<<2);                     \
         $fwrite(c_reg_defines_fd, "#define TX_QUEUE_0_NUM_PKTS_ENQUEUED_REG                     0x%07x\n\n", `TX_QUEUE_0_NUM_PKTS_ENQUEUED_REG<<2);                  \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define MAC_GRP_1_CONTROL_REG                                0x%07x\n", `MAC_GRP_1_CONTROL_REG<<2);                               \
         $fwrite(c_reg_defines_fd, "#define RX_QUEUE_1_NUM_PKTS_STORED_REG                       0x%07x\n", `RX_QUEUE_1_NUM_PKTS_STORED_REG<<2);                      \
         $fwrite(c_reg_defines_fd, "#define RX_QUEUE_1_NUM_PKTS_DROPPED_FULL_REG                 0x%07x\n", `RX_QUEUE_1_NUM_PKTS_DROPPED_FULL_REG<<2);                \
         $fwrite(c_reg_defines_fd, "#define RX_QUEUE_1_NUM_PKTS_DROPPED_BAD_REG                  0x%07x\n", `RX_QUEUE_1_NUM_PKTS_DROPPED_BAD_REG<<2);                 \
         $fwrite(c_reg_defines_fd, "#define RX_QUEUE_1_NUM_WORDS_PUSHED_REG                      0x%07x\n", `RX_QUEUE_1_NUM_WORDS_PUSHED_REG<<2);                     \
         $fwrite(c_reg_defines_fd, "#define RX_QUEUE_1_NUM_BYTES_PUSHED_REG                      0x%07x\n", `RX_QUEUE_1_NUM_BYTES_PUSHED_REG<<2);                     \
         $fwrite(c_reg_defines_fd, "#define RX_QUEUE_1_NUM_PKTS_DEQUEUED_REG                     0x%07x\n", `RX_QUEUE_1_NUM_PKTS_DEQUEUED_REG<<2);                    \
         $fwrite(c_reg_defines_fd, "#define RX_QUEUE_1_NUM_PKTS_IN_QUEUE_REG                     0x%07x\n", `RX_QUEUE_1_NUM_PKTS_IN_QUEUE_REG<<2);                    \
                                                                                                                                                                      \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define TX_QUEUE_1_NUM_PKTS_IN_QUEUE_REG                     0x%07x\n", `TX_QUEUE_1_NUM_PKTS_IN_QUEUE_REG<<2);                    \
         $fwrite(c_reg_defines_fd, "#define TX_QUEUE_1_NUM_PKTS_SENT_REG                         0x%07x\n", `TX_QUEUE_1_NUM_PKTS_SENT_REG<<2);                        \
         $fwrite(c_reg_defines_fd, "#define TX_QUEUE_1_NUM_WORDS_PUSHED_REG                      0x%07x\n", `TX_QUEUE_1_NUM_WORDS_PUSHED_REG<<2);                     \
         $fwrite(c_reg_defines_fd, "#define TX_QUEUE_1_NUM_BYTES_PUSHED_REG                      0x%07x\n", `TX_QUEUE_1_NUM_BYTES_PUSHED_REG<<2);                     \
         $fwrite(c_reg_defines_fd, "#define TX_QUEUE_1_NUM_PKTS_ENQUEUED_REG                     0x%07x\n\n", `TX_QUEUE_1_NUM_PKTS_ENQUEUED_REG<<2);                  \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define MAC_GRP_2_CONTROL_REG                                0x%07x\n", `MAC_GRP_2_CONTROL_REG<<2);                               \
         $fwrite(c_reg_defines_fd, "#define RX_QUEUE_2_NUM_PKTS_STORED_REG                       0x%07x\n", `RX_QUEUE_2_NUM_PKTS_STORED_REG<<2);                      \
         $fwrite(c_reg_defines_fd, "#define RX_QUEUE_2_NUM_PKTS_DROPPED_FULL_REG                 0x%07x\n", `RX_QUEUE_2_NUM_PKTS_DROPPED_FULL_REG<<2);                \
         $fwrite(c_reg_defines_fd, "#define RX_QUEUE_2_NUM_PKTS_DROPPED_BAD_REG                  0x%07x\n", `RX_QUEUE_2_NUM_PKTS_DROPPED_BAD_REG<<2);                 \
         $fwrite(c_reg_defines_fd, "#define RX_QUEUE_2_NUM_WORDS_PUSHED_REG                      0x%07x\n", `RX_QUEUE_2_NUM_WORDS_PUSHED_REG<<2);                     \
         $fwrite(c_reg_defines_fd, "#define RX_QUEUE_2_NUM_BYTES_PUSHED_REG                      0x%07x\n", `RX_QUEUE_2_NUM_BYTES_PUSHED_REG<<2);                     \
         $fwrite(c_reg_defines_fd, "#define RX_QUEUE_2_NUM_PKTS_DEQUEUED_REG                     0x%07x\n", `RX_QUEUE_2_NUM_PKTS_DEQUEUED_REG<<2);                    \
         $fwrite(c_reg_defines_fd, "#define RX_QUEUE_2_NUM_PKTS_IN_QUEUE_REG                     0x%07x\n", `RX_QUEUE_2_NUM_PKTS_IN_QUEUE_REG<<2);                    \
                                                                                                                                                                      \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define TX_QUEUE_2_NUM_PKTS_IN_QUEUE_REG                     0x%07x\n", `TX_QUEUE_2_NUM_PKTS_IN_QUEUE_REG<<2);                    \
         $fwrite(c_reg_defines_fd, "#define TX_QUEUE_2_NUM_PKTS_SENT_REG                         0x%07x\n", `TX_QUEUE_2_NUM_PKTS_SENT_REG<<2);                        \
         $fwrite(c_reg_defines_fd, "#define TX_QUEUE_2_NUM_WORDS_PUSHED_REG                      0x%07x\n", `TX_QUEUE_2_NUM_WORDS_PUSHED_REG<<2);                     \
         $fwrite(c_reg_defines_fd, "#define TX_QUEUE_2_NUM_BYTES_PUSHED_REG                      0x%07x\n", `TX_QUEUE_2_NUM_BYTES_PUSHED_REG<<2);                     \
         $fwrite(c_reg_defines_fd, "#define TX_QUEUE_2_NUM_PKTS_ENQUEUED_REG                     0x%07x\n\n", `TX_QUEUE_2_NUM_PKTS_ENQUEUED_REG<<2);                  \
                                                                                                                                                                      \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define MAC_GRP_3_CONTROL_REG                                0x%07x\n", `MAC_GRP_3_CONTROL_REG<<2);                               \
         $fwrite(c_reg_defines_fd, "#define RX_QUEUE_3_NUM_PKTS_STORED_REG                       0x%07x\n", `RX_QUEUE_3_NUM_PKTS_STORED_REG<<2);                      \
         $fwrite(c_reg_defines_fd, "#define RX_QUEUE_3_NUM_PKTS_DROPPED_FULL_REG                 0x%07x\n", `RX_QUEUE_3_NUM_PKTS_DROPPED_FULL_REG<<2);                \
         $fwrite(c_reg_defines_fd, "#define RX_QUEUE_3_NUM_PKTS_DROPPED_BAD_REG                  0x%07x\n", `RX_QUEUE_3_NUM_PKTS_DROPPED_BAD_REG<<2);                 \
         $fwrite(c_reg_defines_fd, "#define RX_QUEUE_3_NUM_WORDS_PUSHED_REG                      0x%07x\n", `RX_QUEUE_3_NUM_WORDS_PUSHED_REG<<2);                     \
         $fwrite(c_reg_defines_fd, "#define RX_QUEUE_3_NUM_BYTES_PUSHED_REG                      0x%07x\n", `RX_QUEUE_3_NUM_BYTES_PUSHED_REG<<2);                     \
         $fwrite(c_reg_defines_fd, "#define RX_QUEUE_3_NUM_PKTS_DEQUEUED_REG                     0x%07x\n", `RX_QUEUE_3_NUM_PKTS_DEQUEUED_REG<<2);                    \
         $fwrite(c_reg_defines_fd, "#define RX_QUEUE_3_NUM_PKTS_IN_QUEUE_REG                     0x%07x\n", `RX_QUEUE_3_NUM_PKTS_IN_QUEUE_REG<<2);                    \
                                                                                                                                                                      \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define TX_QUEUE_3_NUM_PKTS_IN_QUEUE_REG                     0x%07x\n", `TX_QUEUE_3_NUM_PKTS_IN_QUEUE_REG<<2);                    \
         $fwrite(c_reg_defines_fd, "#define TX_QUEUE_3_NUM_PKTS_SENT_REG                         0x%07x\n", `TX_QUEUE_3_NUM_PKTS_SENT_REG<<2);                        \
         $fwrite(c_reg_defines_fd, "#define TX_QUEUE_3_NUM_WORDS_PUSHED_REG                      0x%07x\n", `TX_QUEUE_3_NUM_WORDS_PUSHED_REG<<2);                     \
         $fwrite(c_reg_defines_fd, "#define TX_QUEUE_3_NUM_BYTES_PUSHED_REG                      0x%07x\n", `TX_QUEUE_3_NUM_BYTES_PUSHED_REG<<2);                     \
         $fwrite(c_reg_defines_fd, "#define TX_QUEUE_3_NUM_PKTS_ENQUEUED_REG                     0x%07x\n\n", `TX_QUEUE_3_NUM_PKTS_ENQUEUED_REG<<2);                  \
                                                                                                                                                                      \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_0_WR_DATA_WORD_REG                         0x%07x\n", `CPU_REG_Q_0_WR_DATA_WORD_REG<<2);                        \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_0_WR_CTRL_WORD_REG                         0x%07x\n", `CPU_REG_Q_0_WR_CTRL_WORD_REG<<2);                        \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_0_WR_NUM_WORDS_LEFT_REG                    0x%07x\n", `CPU_REG_Q_0_WR_NUM_WORDS_LEFT_REG<<2);                   \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_0_WR_NUM_PKTS_IN_Q_REG                     0x%07x\n", `CPU_REG_Q_0_WR_NUM_PKTS_IN_Q_REG<<2);                    \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_0_RD_DATA_WORD_REG                         0x%07x\n", `CPU_REG_Q_0_RD_DATA_WORD_REG<<2);                        \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_0_RD_CTRL_WORD_REG                         0x%07x\n", `CPU_REG_Q_0_RD_CTRL_WORD_REG<<2);                        \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_0_RD_NUM_WORDS_AVAIL_REG                   0x%07x\n", `CPU_REG_Q_0_RD_NUM_WORDS_AVAIL_REG<<2);                  \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_0_RD_NUM_PKTS_IN_Q_REG                     0x%07x\n", `CPU_REG_Q_0_RD_NUM_PKTS_IN_Q_REG<<2);                    \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_0_RX_NUM_PKTS_RCVD_REG                     0x%07x\n", `CPU_REG_Q_0_RX_NUM_PKTS_RCVD_REG<<2);                    \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_0_TX_NUM_PKTS_SENT_REG                     0x%07x\n", `CPU_REG_Q_0_TX_NUM_PKTS_SENT_REG<<2);                    \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_0_RX_NUM_WORDS_RCVD_REG                    0x%07x\n", `CPU_REG_Q_0_RX_NUM_WORDS_RCVD_REG<<2);                   \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_0_TX_NUM_WORDS_SENT_REG                    0x%07x\n", `CPU_REG_Q_0_TX_NUM_WORDS_SENT_REG<<2);                   \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_0_RX_NUM_BYTES_RCVD_REG                    0x%07x\n", `CPU_REG_Q_0_RX_NUM_BYTES_RCVD_REG<<2);                   \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_0_TX_NUM_BYTES_SENT_REG                    0x%07x\n\n", `CPU_REG_Q_0_TX_NUM_BYTES_SENT_REG<<2);                 \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_1_WR_DATA_WORD_REG                         0x%07x\n", `CPU_REG_Q_1_WR_DATA_WORD_REG<<2);                        \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_1_WR_CTRL_WORD_REG                         0x%07x\n", `CPU_REG_Q_1_WR_CTRL_WORD_REG<<2);                        \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_1_WR_NUM_WORDS_LEFT_REG                    0x%07x\n", `CPU_REG_Q_1_WR_NUM_WORDS_LEFT_REG<<2);                   \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_1_WR_NUM_PKTS_IN_Q_REG                     0x%07x\n", `CPU_REG_Q_1_WR_NUM_PKTS_IN_Q_REG<<2);                    \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_1_RD_DATA_WORD_REG                         0x%07x\n", `CPU_REG_Q_1_RD_DATA_WORD_REG<<2);                        \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_1_RD_CTRL_WORD_REG                         0x%07x\n", `CPU_REG_Q_1_RD_CTRL_WORD_REG<<2);                        \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_1_RD_NUM_WORDS_AVAIL_REG                   0x%07x\n", `CPU_REG_Q_1_RD_NUM_WORDS_AVAIL_REG<<2);                  \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_1_RD_NUM_PKTS_IN_Q_REG                     0x%07x\n", `CPU_REG_Q_1_RD_NUM_PKTS_IN_Q_REG<<2);                    \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_1_RX_NUM_PKTS_RCVD_REG                     0x%07x\n", `CPU_REG_Q_1_RX_NUM_PKTS_RCVD_REG<<2);                    \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_1_TX_NUM_PKTS_SENT_REG                     0x%07x\n", `CPU_REG_Q_1_TX_NUM_PKTS_SENT_REG<<2);                    \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_1_RX_NUM_WORDS_RCVD_REG                    0x%07x\n", `CPU_REG_Q_1_RX_NUM_WORDS_RCVD_REG<<2);                   \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_1_TX_NUM_WORDS_SENT_REG                    0x%07x\n", `CPU_REG_Q_1_TX_NUM_WORDS_SENT_REG<<2);                   \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_1_RX_NUM_BYTES_RCVD_REG                    0x%07x\n", `CPU_REG_Q_1_RX_NUM_BYTES_RCVD_REG<<2);                   \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_1_TX_NUM_BYTES_SENT_REG                    0x%07x\n\n", `CPU_REG_Q_1_TX_NUM_BYTES_SENT_REG<<2);                 \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_2_WR_DATA_WORD_REG                         0x%07x\n", `CPU_REG_Q_2_WR_DATA_WORD_REG<<2);                        \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_2_WR_CTRL_WORD_REG                         0x%07x\n", `CPU_REG_Q_2_WR_CTRL_WORD_REG<<2);                        \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_2_WR_NUM_WORDS_LEFT_REG                    0x%07x\n", `CPU_REG_Q_2_WR_NUM_WORDS_LEFT_REG<<2);                   \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_2_WR_NUM_PKTS_IN_Q_REG                     0x%07x\n", `CPU_REG_Q_2_WR_NUM_PKTS_IN_Q_REG<<2);                    \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_2_RD_DATA_WORD_REG                         0x%07x\n", `CPU_REG_Q_2_RD_DATA_WORD_REG<<2);                        \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_2_RD_CTRL_WORD_REG                         0x%07x\n", `CPU_REG_Q_2_RD_CTRL_WORD_REG<<2);                        \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_2_RD_NUM_WORDS_AVAIL_REG                   0x%07x\n", `CPU_REG_Q_2_RD_NUM_WORDS_AVAIL_REG<<2);                  \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_2_RD_NUM_PKTS_IN_Q_REG                     0x%07x\n", `CPU_REG_Q_2_RD_NUM_PKTS_IN_Q_REG<<2);                    \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_2_RX_NUM_PKTS_RCVD_REG                     0x%07x\n", `CPU_REG_Q_2_RX_NUM_PKTS_RCVD_REG<<2);                    \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_2_TX_NUM_PKTS_SENT_REG                     0x%07x\n", `CPU_REG_Q_2_TX_NUM_PKTS_SENT_REG<<2);                    \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_2_RX_NUM_WORDS_RCVD_REG                    0x%07x\n", `CPU_REG_Q_2_RX_NUM_WORDS_RCVD_REG<<2);                   \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_2_TX_NUM_WORDS_SENT_REG                    0x%07x\n", `CPU_REG_Q_2_TX_NUM_WORDS_SENT_REG<<2);                   \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_2_RX_NUM_BYTES_RCVD_REG                    0x%07x\n", `CPU_REG_Q_2_RX_NUM_BYTES_RCVD_REG<<2);                   \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_2_TX_NUM_BYTES_SENT_REG                    0x%07x\n\n", `CPU_REG_Q_2_TX_NUM_BYTES_SENT_REG<<2);                 \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_3_WR_DATA_WORD_REG                         0x%07x\n", `CPU_REG_Q_3_WR_DATA_WORD_REG<<2);                        \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_3_WR_CTRL_WORD_REG                         0x%07x\n", `CPU_REG_Q_3_WR_CTRL_WORD_REG<<2);                        \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_3_WR_NUM_WORDS_LEFT_REG                    0x%07x\n", `CPU_REG_Q_3_WR_NUM_WORDS_LEFT_REG<<2);                   \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_3_WR_NUM_PKTS_IN_Q_REG                     0x%07x\n", `CPU_REG_Q_3_WR_NUM_PKTS_IN_Q_REG<<2);                    \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_3_RD_DATA_WORD_REG                         0x%07x\n", `CPU_REG_Q_3_RD_DATA_WORD_REG<<2);                        \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_3_RD_CTRL_WORD_REG                         0x%07x\n", `CPU_REG_Q_3_RD_CTRL_WORD_REG<<2);                        \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_3_RD_NUM_WORDS_AVAIL_REG                   0x%07x\n", `CPU_REG_Q_3_RD_NUM_WORDS_AVAIL_REG<<2);                  \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_3_RD_NUM_PKTS_IN_Q_REG                     0x%07x\n", `CPU_REG_Q_3_RD_NUM_PKTS_IN_Q_REG<<2);                    \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_3_RX_NUM_PKTS_RCVD_REG                     0x%07x\n", `CPU_REG_Q_3_RX_NUM_PKTS_RCVD_REG<<2);                    \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_3_TX_NUM_PKTS_SENT_REG                     0x%07x\n", `CPU_REG_Q_3_TX_NUM_PKTS_SENT_REG<<2);                    \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_3_RX_NUM_WORDS_RCVD_REG                    0x%07x\n", `CPU_REG_Q_3_RX_NUM_WORDS_RCVD_REG<<2);                   \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_3_TX_NUM_WORDS_SENT_REG                    0x%07x\n", `CPU_REG_Q_3_TX_NUM_WORDS_SENT_REG<<2);                   \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_3_RX_NUM_BYTES_RCVD_REG                    0x%07x\n", `CPU_REG_Q_3_RX_NUM_BYTES_RCVD_REG<<2);                   \
         $fwrite(c_reg_defines_fd, "#define CPU_REG_Q_3_TX_NUM_BYTES_SENT_REG                    0x%07x\n\n", `CPU_REG_Q_3_TX_NUM_BYTES_SENT_REG<<2);                 \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define CLK_SYN_0_COUNTER_RESET                              0x%07x\n",  `CLK_SYN_0_COUNTER_RESET_REG<<2);                        \
         $fwrite(c_reg_defines_fd, "#define CLK_SYN_0_TX_LO_REG                                  0x%07x\n",  `CLK_SYN_0_TX_LO_REG<<2) ;                               \
         $fwrite(c_reg_defines_fd, "#define CLK_SYN_0_TX_HI_REG                                  0x%07x\n",  `CLK_SYN_0_TX_HI_REG<<2);                                \
         $fwrite(c_reg_defines_fd, "#define CLK_SYN_0_RX_LO_REG                                  0x%07x\n",  `CLK_SYN_0_RX_LO_REG<<2);                                \
         $fwrite(c_reg_defines_fd, "#define CLK_SYN_0_RX_HI_REG                                  0x%07x\n",  `CLK_SYN_0_RX_HI_REG<<2);                                \
         $fwrite(c_reg_defines_fd, "#define CLK_SYN_1_COUNTER_RESET                              0x%07x\n",  `CLK_SYN_1_COUNTER_RESET_REG<<2);                        \
         $fwrite(c_reg_defines_fd, "#define CLK_SYN_1_TX_LO_REG                                  0x%07x\n",  `CLK_SYN_1_TX_LO_REG<<2) ;                               \
         $fwrite(c_reg_defines_fd, "#define CLK_SYN_1_TX_HI_REG                                  0x%07x\n",  `CLK_SYN_1_TX_HI_REG<<2);                                \
         $fwrite(c_reg_defines_fd, "#define CLK_SYN_1_RX_LO_REG                                  0x%07x\n",  `CLK_SYN_1_RX_LO_REG<<2);                                \
         $fwrite(c_reg_defines_fd, "#define CLK_SYN_1_RX_HI_REG                                  0x%07x\n",  `CLK_SYN_1_RX_HI_REG<<2);                                \
         $fwrite(c_reg_defines_fd, "#define CLK_SYN_2_COUNTER_RESET                              0x%07x\n",  `CLK_SYN_2_COUNTER_RESET_REG<<2);                        \
         $fwrite(c_reg_defines_fd, "#define CLK_SYN_2_TX_LO_REG                                  0x%07x\n",  `CLK_SYN_2_TX_LO_REG<<2) ;                               \
         $fwrite(c_reg_defines_fd, "#define CLK_SYN_2_TX_HI_REG                                  0x%07x\n",  `CLK_SYN_2_TX_HI_REG<<2);                                \
         $fwrite(c_reg_defines_fd, "#define CLK_SYN_2_RX_LO_REG                                  0x%07x\n",  `CLK_SYN_2_RX_LO_REG<<2);                                \
         $fwrite(c_reg_defines_fd, "#define CLK_SYN_2_RX_HI_REG                                  0x%07x\n",  `CLK_SYN_2_RX_HI_REG<<2);                                \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define CLK_SYN_3_COUNTER_RESET                              0x%07x\n",  `CLK_SYN_3_COUNTER_RESET_REG<<2);                        \
         $fwrite(c_reg_defines_fd, "#define CLK_SYN_3_TX_LO_REG                                  0x%07x\n",  `CLK_SYN_3_TX_LO_REG<<2) ;                               \
         $fwrite(c_reg_defines_fd, "#define CLK_SYN_3_TX_HI_REG                                  0x%07x\n",  `CLK_SYN_3_TX_HI_REG<<2);                                \
         $fwrite(c_reg_defines_fd, "#define CLK_SYN_3_RX_LO_REG                                  0x%07x\n",  `CLK_SYN_3_RX_LO_REG<<2);                                \
         $fwrite(c_reg_defines_fd, "#define CLK_SYN_3_RX_HI_REG                                  0x%07x\n",  `CLK_SYN_3_RX_HI_REG <<2);                               \
         $fwrite(c_reg_defines_fd, "#define PTP_VALID_RX_REG                                     0x%07x\n",  `PTP_VALID_RX_REG<<2) ;                                  \
         $fwrite(c_reg_defines_fd, "#define PTP_VALID_TX_REG                                     0x%07x\n",  `PTP_VALID_TX_REG<<2) ;                                  \
         $fwrite(c_reg_defines_fd, "#define PTP_ENABLE_MASK_RX_REG                               0x%07x\n",  `PTP_ENABLE_MASK_RX_REG<<2) ;                            \
         $fwrite(c_reg_defines_fd, "#define PTP_ENABLE_MASK_TX_REG                               0x%07x\n",  `PTP_ENABLE_MASK_TX_REG<<2) ;                            \
         $fwrite(c_reg_defines_fd, "#define PTP_MASK_RX_REG                                      0x%07x\n",  `PTP_MASK_RX_REG<<2) ;                                   \
         $fwrite(c_reg_defines_fd, "#define PTP_MASK_TX_REG                                      0x%07x\n",  `PTP_MASK_TX_REG<<2) ;                                   \
         $fwrite(c_reg_defines_fd, "#define DMA_TX_QUE_0_REG                                     0x%07x\n", `DMA_TX_QUE_0_REG<<2) ;                                   \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define DMA_TX_QUE_0_LAST_1_BYTE_REG                         0x%07x\n", `DMA_TX_QUE_0_LAST_1_BYTE_REG<<2) ;                       \
         $fwrite(c_reg_defines_fd, "#define DMA_TX_QUE_0_LAST_2_BYTE_REG                         0x%07x\n", `DMA_TX_QUE_0_LAST_2_BYTE_REG<<2) ;                       \
         $fwrite(c_reg_defines_fd, "#define DMA_TX_QUE_0_LAST_3_BYTE_REG                         0x%07x\n", `DMA_TX_QUE_0_LAST_3_BYTE_REG<<2) ;                       \
         $fwrite(c_reg_defines_fd, "#define DMA_TX_QUE_0_LAST_4_BYTE_REG                         0x%07x\n\n", `DMA_TX_QUE_0_LAST_4_BYTE_REG<<2) ;                     \
         $fwrite(c_reg_defines_fd, "#define DMA_TX_QUE_1_REG                                     0x%07x\n", `DMA_TX_QUE_1_REG<<2) ;                                   \
         $fwrite(c_reg_defines_fd, "#define DMA_TX_QUE_1_LAST_1_BYTE_REG                         0x%07x\n", `DMA_TX_QUE_1_LAST_1_BYTE_REG<<2) ;                       \
         $fwrite(c_reg_defines_fd, "#define DMA_TX_QUE_1_LAST_2_BYTE_REG                         0x%07x\n", `DMA_TX_QUE_1_LAST_2_BYTE_REG<<2) ;                       \
         $fwrite(c_reg_defines_fd, "#define DMA_TX_QUE_1_LAST_3_BYTE_REG                         0x%07x\n", `DMA_TX_QUE_1_LAST_3_BYTE_REG<<2) ;                       \
         $fwrite(c_reg_defines_fd, "#define DMA_TX_QUE_1_LAST_4_BYTE_REG                         0x%07x\n\n", `DMA_TX_QUE_1_LAST_4_BYTE_REG<<2) ;                     \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define DMA_TX_QUE_2_REG                                     0x%07x\n", `DMA_TX_QUE_2_REG<<2) ;                                   \
         $fwrite(c_reg_defines_fd, "#define DMA_TX_QUE_2_LAST_1_BYTE_REG                         0x%07x\n", `DMA_TX_QUE_2_LAST_1_BYTE_REG<<2) ;                       \
         $fwrite(c_reg_defines_fd, "#define DMA_TX_QUE_2_LAST_2_BYTE_REG                         0x%07x\n", `DMA_TX_QUE_2_LAST_2_BYTE_REG<<2) ;                       \
         $fwrite(c_reg_defines_fd, "#define DMA_TX_QUE_2_LAST_3_BYTE_REG                         0x%07x\n", `DMA_TX_QUE_2_LAST_3_BYTE_REG<<2) ;                       \
         $fwrite(c_reg_defines_fd, "#define DMA_TX_QUE_2_LAST_4_BYTE_REG                         0x%07x\n\n", `DMA_TX_QUE_2_LAST_4_BYTE_REG<<2) ;                     \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define DMA_TX_QUE_3_REG                                     0x%07x\n", `DMA_TX_QUE_3_REG<<2) ;                                   \
         $fwrite(c_reg_defines_fd, "#define DMA_TX_QUE_3_LAST_1_BYTE_REG                         0x%07x\n", `DMA_TX_QUE_3_LAST_1_BYTE_REG<<2) ;                       \
         $fwrite(c_reg_defines_fd, "#define DMA_TX_QUE_3_LAST_2_BYTE_REG                         0x%07x\n", `DMA_TX_QUE_3_LAST_2_BYTE_REG<<2) ;                       \
         $fwrite(c_reg_defines_fd, "#define DMA_TX_QUE_3_LAST_3_BYTE_REG                         0x%07x\n", `DMA_TX_QUE_3_LAST_3_BYTE_REG<<2) ;                       \
         $fwrite(c_reg_defines_fd, "#define DMA_TX_QUE_3_LAST_4_BYTE_REG                         0x%07x\n\n", `DMA_TX_QUE_3_LAST_4_BYTE_REG<<2);                      \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define MDIO_0_CONTROL_REG                                   0x%07x\n", `MDIO_0_CONTROL_REG<<2);                                  \
         $fwrite(c_reg_defines_fd, "#define MDIO_0_STATUS_REG                                    0x%07x\n", `MDIO_0_STATUS_REG<<2);                                   \
         $fwrite(c_reg_defines_fd, "#define MDIO_0_PHY_ID_0_REG                                  0x%07x\n", `MDIO_0_PHY_ID_0_REG<<2);                                 \
         $fwrite(c_reg_defines_fd, "#define MDIO_0_PHY_ID_1_REG                                  0x%07x\n", `MDIO_0_PHY_ID_1_REG<<2);                                 \
         $fwrite(c_reg_defines_fd, "#define MDIO_0_AUTONEGOTIATION_ADVERT_REG                    0x%07x\n", `MDIO_0_AUTONEGOTIATION_ADVERT_REG<<2);                   \
         $fwrite(c_reg_defines_fd, "#define MDIO_0_AUTONEG_LINK_PARTNER_BASE_PAGE_ABILITY_REG    0x%07x\n", `MDIO_0_AUTONEG_LINK_PARTNER_BASE_PAGE_ABILITY_REG<<2);   \
         $fwrite(c_reg_defines_fd, "#define MDIO_0_AUTONEG_EXPANSION_REG                         0x%07x\n", `MDIO_0_AUTONEG_EXPANSION_REG<<2);                        \
         $fwrite(c_reg_defines_fd, "#define MDIO_0_AUTONEG_NEXT_PAGE_TX_REG                      0x%07x\n", `MDIO_0_AUTONEG_NEXT_PAGE_TX_REG<<2);                     \
         $fwrite(c_reg_defines_fd, "#define MDIO_0_AUTONEG_LINK_PARTNER_RCVD_NEXT_PAGE_REG       0x%07x\n", `MDIO_0_AUTONEG_LINK_PARTNER_RCVD_NEXT_PAGE_REG<<2);      \
         $fwrite(c_reg_defines_fd, "#define MDIO_0_MASTER_SLAVE_CTRL_REG                         0x%07x\n", `MDIO_0_MASTER_SLAVE_CTRL_REG<<2);                        \
         $fwrite(c_reg_defines_fd, "#define MDIO_0_MASTER_SLAVE_STATUS_REG                       0x%07x\n", `MDIO_0_MASTER_SLAVE_STATUS_REG<<2);                      \
         $fwrite(c_reg_defines_fd, "#define MDIO_0_PSE_CTRL_REG                                  0x%07x\n", `MDIO_0_PSE_CTRL_REG<<2);                                 \
         $fwrite(c_reg_defines_fd, "#define MDIO_0_PSE_STATUS_REG                                0x%07x\n", `MDIO_0_PSE_STATUS_REG<<2);                               \
         $fwrite(c_reg_defines_fd, "#define MDIO_0_MMD_ACCESS_CTRL_REG                           0x%07x\n", `MDIO_0_MMD_ACCESS_CTRL_REG<<2);                          \
         $fwrite(c_reg_defines_fd, "#define MDIO_0_MMD_ACCESS_STATUS_REG                         0x%07x\n", `MDIO_0_MMD_ACCESS_STATUS_REG<<2);                        \
         $fwrite(c_reg_defines_fd, "#define MDIO_0_EXTENDED_STATUS_REG                           0x%07x\n\n", `MDIO_0_EXTENDED_STATUS_REG<<2);                        \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define MDIO_1_CONTROL_REG                                   0x%07x\n", `MDIO_1_CONTROL_REG<<2);                                  \
         $fwrite(c_reg_defines_fd, "#define MDIO_1_STATUS_REG                                    0x%07x\n", `MDIO_1_STATUS_REG<<2);                                   \
         $fwrite(c_reg_defines_fd, "#define MDIO_1_PHY_ID_0_REG                                  0x%07x\n", `MDIO_1_PHY_ID_0_REG<<2);                                 \
         $fwrite(c_reg_defines_fd, "#define MDIO_1_PHY_ID_1_REG                                  0x%07x\n", `MDIO_1_PHY_ID_1_REG<<2);                                 \
         $fwrite(c_reg_defines_fd, "#define MDIO_1_AUTONEGOTIATION_ADVERT_REG                    0x%07x\n", `MDIO_1_AUTONEGOTIATION_ADVERT_REG<<2);                   \
         $fwrite(c_reg_defines_fd, "#define MDIO_1_AUTONEG_LINK_PARTNER_BASE_PAGE_ABILITY_REG    0x%07x\n", `MDIO_1_AUTONEG_LINK_PARTNER_BASE_PAGE_ABILITY_REG<<2);   \
         $fwrite(c_reg_defines_fd, "#define MDIO_1_AUTONEG_EXPANSION_REG                         0x%07x\n", `MDIO_1_AUTONEG_EXPANSION_REG<<2);                        \
         $fwrite(c_reg_defines_fd, "#define MDIO_1_AUTONEG_NEXT_PAGE_TX_REG                      0x%07x\n", `MDIO_1_AUTONEG_NEXT_PAGE_TX_REG<<2);                     \
         $fwrite(c_reg_defines_fd, "#define MDIO_1_AUTONEG_LINK_PARTNER_RCVD_NEXT_PAGE_REG       0x%07x\n", `MDIO_1_AUTONEG_LINK_PARTNER_RCVD_NEXT_PAGE_REG<<2);      \
         $fwrite(c_reg_defines_fd, "#define MDIO_1_MASTER_SLAVE_CTRL_REG                         0x%07x\n", `MDIO_1_MASTER_SLAVE_CTRL_REG<<2);                        \
         $fwrite(c_reg_defines_fd, "#define MDIO_1_MASTER_SLAVE_STATUS_REG                       0x%07x\n", `MDIO_1_MASTER_SLAVE_STATUS_REG<<2);                      \
         $fwrite(c_reg_defines_fd, "#define MDIO_1_PSE_CTRL_REG                                  0x%07x\n", `MDIO_1_PSE_CTRL_REG<<2);                                 \
         $fwrite(c_reg_defines_fd, "#define MDIO_1_PSE_STATUS_REG                                0x%07x\n", `MDIO_1_PSE_STATUS_REG<<2);                               \
         $fwrite(c_reg_defines_fd, "#define MDIO_1_MMD_ACCESS_CTRL_REG                           0x%07x\n", `MDIO_1_MMD_ACCESS_CTRL_REG<<2);                          \
         $fwrite(c_reg_defines_fd, "#define MDIO_1_MMD_ACCESS_STATUS_REG                         0x%07x\n", `MDIO_1_MMD_ACCESS_STATUS_REG<<2);                        \
         $fwrite(c_reg_defines_fd, "#define MDIO_1_EXTENDED_STATUS_REG                           0x%07x\n\n", `MDIO_1_EXTENDED_STATUS_REG<<2);                        \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define MDIO_2_CONTROL_REG                                   0x%07x\n", `MDIO_2_CONTROL_REG<<2);                                  \
         $fwrite(c_reg_defines_fd, "#define MDIO_2_STATUS_REG                                    0x%07x\n", `MDIO_2_STATUS_REG<<2);                                   \
         $fwrite(c_reg_defines_fd, "#define MDIO_2_PHY_ID_0_REG                                  0x%07x\n", `MDIO_2_PHY_ID_0_REG<<2);                                 \
         $fwrite(c_reg_defines_fd, "#define MDIO_2_PHY_ID_1_REG                                  0x%07x\n", `MDIO_2_PHY_ID_1_REG<<2);                                 \
         $fwrite(c_reg_defines_fd, "#define MDIO_2_AUTONEGOTIATION_ADVERT_REG                    0x%07x\n", `MDIO_2_AUTONEGOTIATION_ADVERT_REG<<2);                   \
         $fwrite(c_reg_defines_fd, "#define MDIO_2_AUTONEG_LINK_PARTNER_BASE_PAGE_ABILITY_REG    0x%07x\n", `MDIO_2_AUTONEG_LINK_PARTNER_BASE_PAGE_ABILITY_REG<<2);   \
         $fwrite(c_reg_defines_fd, "#define MDIO_2_AUTONEG_EXPANSION_REG                         0x%07x\n", `MDIO_2_AUTONEG_EXPANSION_REG<<2);                        \
         $fwrite(c_reg_defines_fd, "#define MDIO_2_AUTONEG_NEXT_PAGE_TX_REG                      0x%07x\n", `MDIO_2_AUTONEG_NEXT_PAGE_TX_REG<<2);                     \
         $fwrite(c_reg_defines_fd, "#define MDIO_2_AUTONEG_LINK_PARTNER_RCVD_NEXT_PAGE_REG       0x%07x\n", `MDIO_2_AUTONEG_LINK_PARTNER_RCVD_NEXT_PAGE_REG<<2);      \
         $fwrite(c_reg_defines_fd, "#define MDIO_2_MASTER_SLAVE_CTRL_REG                         0x%07x\n", `MDIO_2_MASTER_SLAVE_CTRL_REG<<2);                        \
         $fwrite(c_reg_defines_fd, "#define MDIO_2_MASTER_SLAVE_STATUS_REG                       0x%07x\n", `MDIO_2_MASTER_SLAVE_STATUS_REG<<2);                      \
         $fwrite(c_reg_defines_fd, "#define MDIO_2_PSE_CTRL_REG                                  0x%07x\n", `MDIO_2_PSE_CTRL_REG<<2);                                 \
         $fwrite(c_reg_defines_fd, "#define MDIO_2_PSE_STATUS_REG                                0x%07x\n", `MDIO_2_PSE_STATUS_REG<<2);                               \
         $fwrite(c_reg_defines_fd, "#define MDIO_2_MMD_ACCESS_CTRL_REG                           0x%07x\n", `MDIO_2_MMD_ACCESS_CTRL_REG<<2);                          \
         $fwrite(c_reg_defines_fd, "#define MDIO_2_MMD_ACCESS_STATUS_REG                         0x%07x\n", `MDIO_2_MMD_ACCESS_STATUS_REG<<2);                        \
         $fwrite(c_reg_defines_fd, "#define MDIO_2_EXTENDED_STATUS_REG                           0x%07x\n\n", `MDIO_2_EXTENDED_STATUS_REG<<2);                        \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define MDIO_3_CONTROL_REG                                   0x%07x\n", `MDIO_3_CONTROL_REG<<2);                                  \
         $fwrite(c_reg_defines_fd, "#define MDIO_3_STATUS_REG                                    0x%07x\n", `MDIO_3_STATUS_REG<<2);                                   \
         $fwrite(c_reg_defines_fd, "#define MDIO_3_PHY_ID_0_REG                                  0x%07x\n", `MDIO_3_PHY_ID_0_REG<<2);                                 \
         $fwrite(c_reg_defines_fd, "#define MDIO_3_PHY_ID_1_REG                                  0x%07x\n", `MDIO_3_PHY_ID_1_REG<<2);                                 \
         $fwrite(c_reg_defines_fd, "#define MDIO_3_AUTONEGOTIATION_ADVERT_REG                    0x%07x\n", `MDIO_3_AUTONEGOTIATION_ADVERT_REG<<2);                   \
         $fwrite(c_reg_defines_fd, "#define MDIO_3_AUTONEG_LINK_PARTNER_BASE_PAGE_ABILITY_REG    0x%07x\n", `MDIO_3_AUTONEG_LINK_PARTNER_BASE_PAGE_ABILITY_REG<<2);   \
         $fwrite(c_reg_defines_fd, "#define MDIO_3_AUTONEG_EXPANSION_REG                         0x%07x\n", `MDIO_3_AUTONEG_EXPANSION_REG<<2);                        \
         $fwrite(c_reg_defines_fd, "#define MDIO_3_AUTONEG_NEXT_PAGE_TX_REG                      0x%07x\n", `MDIO_3_AUTONEG_NEXT_PAGE_TX_REG<<2);                     \
         $fwrite(c_reg_defines_fd, "#define MDIO_3_AUTONEG_LINK_PARTNER_RCVD_NEXT_PAGE_REG       0x%07x\n", `MDIO_3_AUTONEG_LINK_PARTNER_RCVD_NEXT_PAGE_REG<<2);      \
         $fwrite(c_reg_defines_fd, "#define MDIO_3_MASTER_SLAVE_CTRL_REG                         0x%07x\n", `MDIO_3_MASTER_SLAVE_CTRL_REG<<2);                        \
         $fwrite(c_reg_defines_fd, "#define MDIO_3_MASTER_SLAVE_STATUS_REG                       0x%07x\n", `MDIO_3_MASTER_SLAVE_STATUS_REG<<2);                      \
         $fwrite(c_reg_defines_fd, "#define MDIO_3_PSE_CTRL_REG                                  0x%07x\n", `MDIO_3_PSE_CTRL_REG<<2);                                 \
         $fwrite(c_reg_defines_fd, "#define MDIO_3_PSE_STATUS_REG                                0x%07x\n", `MDIO_3_PSE_STATUS_REG<<2);                               \
         $fwrite(c_reg_defines_fd, "#define MDIO_3_MMD_ACCESS_CTRL_REG                           0x%07x\n", `MDIO_3_MMD_ACCESS_CTRL_REG<<2);                          \
         $fwrite(c_reg_defines_fd, "#define MDIO_3_MMD_ACCESS_STATUS_REG                         0x%07x\n", `MDIO_3_MMD_ACCESS_STATUS_REG<<2);                        \
         $fwrite(c_reg_defines_fd, "#define MDIO_3_EXTENDED_STATUS_REG                           0x%07x\n\n", `MDIO_3_EXTENDED_STATUS_REG<<2);                        \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define STAMP_COUNTER_1_REG                                  0x%07x\n",  `STAMP_COUNTER_1_REG<<2);                                \
         $fwrite(c_reg_defines_fd, "#define STAMP_COUNTER_2_REG                                  0x%07x\n",  `STAMP_COUNTER_2_REG<<2);                                \
         $fwrite(c_reg_defines_fd, "#define STAMP_COUNTER_3_REG                                  0x%07x\n",  `STAMP_COUNTER_3_REG<<2);                                \
         $fwrite(c_reg_defines_fd, "#define STAMP_COUNTER_4_REG                                  0x%07x\n",  `STAMP_COUNTER_4_REG<<2);                                \
         $fwrite(c_reg_defines_fd, "#define STAMP_COUNTER_1_2_REG_LOAD                           0x%07x\n",  `STAMP_COUNTER_1_2_REG_LOAD<<2);                         \
         $fwrite(c_reg_defines_fd, "#define STAMP_COUNTER_3_4_REG_LOAD                           0x%07x\n\n",  `STAMP_COUNTER_3_4_REG_LOAD<<2);                       \
         $fwrite(c_reg_defines_fd, "#define STAMP_COUNTER_READ_ENABLE                            0x%07x\n\n",  `STAMP_COUNTER_READ_ENABLE<<2);                        \
         $fwrite(c_reg_defines_fd, "#define STAMP_COUNTER_BIT_95_64                              0x%07x\n\n",  `STAMP_COUNTER_BIT_95_64<<2);                          \
         $fwrite(c_reg_defines_fd, "#define STAMP_COUNTER_BIT_63_32                              0x%07x\n\n",  `STAMP_COUNTER_BIT_63_32<<2);                          \
         $fwrite(c_reg_defines_fd, "#define STAMP_COUNTER_BIT_31_0                               0x%07x\n\n",  `STAMP_COUNTER_BIT_31_0<<2);                           \
         $fwrite(c_reg_defines_fd, "#define PHY_RST_BIT_POS                     %d\n", `PHY_RST_BIT_POS);                                                             \
         $fwrite(c_reg_defines_fd, "#define PHY_LOOPBACK_BIT_POS                %d\n", `PHY_LOOPBACK_BIT_POS);                                                        \
         $fwrite(c_reg_defines_fd, "#define PHY_SPEED_SEL_LO_BIT_POS            %d\n", `PHY_SPEED_SEL_LO_BIT_POS);                                                    \
         $fwrite(c_reg_defines_fd, "#define PHY_AUTONEG_ENABLE_BIT_POS          %d\n", `PHY_AUTONEG_ENABLE_BIT_POS);                                                  \
         $fwrite(c_reg_defines_fd, "#define PHY_PWR_DOWN_BIT_POS                %d\n", `PHY_PWR_DOWN_BIT_POS);                                                        \
         $fwrite(c_reg_defines_fd, "#define PHY_ISOLATE_BIT_POS                 %d\n", `PHY_ISOLATE_BIT_POS);                                                         \
         $fwrite(c_reg_defines_fd, "#define PHY_RESTART_AUTONEG_BIT_POS         %d\n", `PHY_RESTART_AUTONEG_BIT_POS);                                                 \
         $fwrite(c_reg_defines_fd, "#define PHY_DUPLEX_MODE_BIT_POS             %d\n", `PHY_DUPLEX_MODE_BIT_POS);                                                     \
         $fwrite(c_reg_defines_fd, "#define PHY_COLLISION_TEST_BIT_POS          %d\n", `PHY_COLLISION_TEST_BIT_POS);                                                  \
         $fwrite(c_reg_defines_fd, "#define PHY_SPEED_SEL_HI_BIT_POS            %d\n", `PHY_SPEED_SEL_HI_BIT_POS);                                                    \
         $fwrite(c_reg_defines_fd, "#define PHY_UNIDIR_ENABLE_BIT_POS           %d\n\n", `PHY_UNIDIR_ENABLE_BIT_POS);                                                 \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define PHY_100BASE_T4_BIT_POS              %d\n", `PHY_100BASE_T4_BIT_POS);                                                      \
         $fwrite(c_reg_defines_fd, "#define PHY_100BASE_X_FULL_DPLX_BIT_POS     %d\n", `PHY_100BASE_X_FULL_DPLX_BIT_POS);                                             \
         $fwrite(c_reg_defines_fd, "#define PHY_100BASE_X_HALF_DPLX_BIT_POS     %d\n", `PHY_100BASE_X_HALF_DPLX_BIT_POS);                                             \
         $fwrite(c_reg_defines_fd, "#define PHY_10MBPS_FULL_DPLX_BIT_POS        %d\n", `PHY_10MBPS_FULL_DPLX_BIT_POS);                                                \
         $fwrite(c_reg_defines_fd, "#define PHY_10MBPS_HALF_DPLX_BIT_POS        %d\n", `PHY_10MBPS_HALF_DPLX_BIT_POS);                                                \
         $fwrite(c_reg_defines_fd, "#define PHY_100BASE_T2_FULL_DPLX_BIT_POS    %d\n", `PHY_100BASE_T2_FULL_DPLX_BIT_POS);                                            \
         $fwrite(c_reg_defines_fd, "#define PHY_100BASE_T2_HALF_DPLX_BIT_POS    %d\n", `PHY_100BASE_T2_HALF_DPLX_BIT_POS);                                            \
         $fwrite(c_reg_defines_fd, "#define PHY_EXTENDED_STATUS_BIT_POS         %d\n", `PHY_EXTENDED_STATUS_BIT_POS);                                                 \
         $fwrite(c_reg_defines_fd, "#define PHY_UNIDIR_ABILITY_BIT_POS          %d\n", `PHY_UNIDIR_ABILITY_BIT_POS);                                                  \
         $fwrite(c_reg_defines_fd, "#define PHY_MF_PREAMBLE_SPRSN_BIT_POS       %d\n", `PHY_MF_PREAMBLE_SPRSN_BIT_POS);                                               \
         $fwrite(c_reg_defines_fd, "#define PHY_AUTONEG_COMPLETE_BIT_POS        %d\n", `PHY_AUTONEG_COMPLETE_BIT_POS);                                                \
         $fwrite(c_reg_defines_fd, "#define PHY_REMOTE_FAULT_BIT_POS            %d\n", `PHY_REMOTE_FAULT_BIT_POS);                                                    \
         $fwrite(c_reg_defines_fd, "#define PHY_AUTONEG_ABILITY_BIT_POS         %d\n", `PHY_AUTONEG_ABILITY_BIT_POS);                                                 \
         $fwrite(c_reg_defines_fd, "#define PHY_LINK_STATUS_BIT_POS             %d\n", `PHY_LINK_STATUS_BIT_POS);                                                     \
         $fwrite(c_reg_defines_fd, "#define PHY_JABBER_DETECT_BIT_POS           %d\n", `PHY_JABBER_DETECT_BIT_POS);                                                   \
         $fwrite(c_reg_defines_fd, "#define PHY_EXTENDED_CAPABILITY_BIT_POS     %d\n\n", `PHY_EXTENDED_CAPABILITY_BIT_POS);                                           \
                                                                                                                                                                      \
	 $fwrite(c_reg_defines_fd, "#define CLK_TEST_TICKS_REG                    0x%07x\n",  `CLK_TEST_TICKS_REG<<2);                                                \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define SERIAL_TEST_CONTROL_0_REG             0x%07x\n",  `SERIAL_TEST_CONTROL_0_REG<<2);                                         \
         $fwrite(c_reg_defines_fd, "#define SERIAL_TEST_STATUS_0_REG              0x%07x\n",  `SERIAL_TEST_STATUS_0_REG<<2);                                          \
         $fwrite(c_reg_defines_fd, "#define SERIAL_TEST_NUM_FRAMES_SENT_0_LO_REG  0x%07x\n",  `SERIAL_TEST_NUM_FRAMES_SENT_0_LO_REG<<2);                              \
         $fwrite(c_reg_defines_fd, "#define SERIAL_TEST_NUM_FRAMES_RCVD_0_LO_REG  0x%07x\n",  `SERIAL_TEST_NUM_FRAMES_RCVD_0_LO_REG<<2);                              \
         $fwrite(c_reg_defines_fd, "#define SERIAL_TEST_NUM_FRAMES_SENT_0_HI_REG  0x%07x\n",  `SERIAL_TEST_NUM_FRAMES_SENT_0_HI_REG<<2);                              \
         $fwrite(c_reg_defines_fd, "#define SERIAL_TEST_NUM_FRAMES_RCVD_0_HI_REG  0x%07x\n",  `SERIAL_TEST_NUM_FRAMES_RCVD_0_HI_REG<<2);                              \
         $fwrite(c_reg_defines_fd, "#define SERIAL_TEST_CONTROL_1_REG             0x%07x\n",  `SERIAL_TEST_CONTROL_1_REG<<2);                                         \
	 $fwrite(c_reg_defines_fd, "#define SERIAL_TEST_STATUS_1_REG              0x%07x\n",  `SERIAL_TEST_STATUS_1_REG<<2);                                          \
	 $fwrite(c_reg_defines_fd, "#define SERIAL_TEST_NUM_FRAMES_SENT_1_LO_REG  0x%07x\n",  `SERIAL_TEST_NUM_FRAMES_SENT_1_LO_REG<<2);                              \
         $fwrite(c_reg_defines_fd, "#define SERIAL_TEST_NUM_FRAMES_RCVD_1_LO_REG  0x%07x\n",  `SERIAL_TEST_NUM_FRAMES_RCVD_1_LO_REG<<2);                              \
         $fwrite(c_reg_defines_fd, "#define SERIAL_TEST_NUM_FRAMES_SENT_1_HI_REG  0x%07x\n",  `SERIAL_TEST_NUM_FRAMES_SENT_1_HI_REG<<2);                              \
         $fwrite(c_reg_defines_fd, "#define SERIAL_TEST_NUM_FRAMES_RCVD_1_HI_REG  0x%07x\n\n",  `SERIAL_TEST_NUM_FRAMES_RCVD_1_HI_REG<<2);                            \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define SERIAL_TEST_CTRL_REG                  0x%07x\n",  `SERIAL_TEST_CTRL_REG<<2);                                              \
         $fwrite(c_reg_defines_fd, "#define SERIAL_TEST_STAT_REG                  0x%07x\n\n",  `SERIAL_TEST_STAT_REG<<2);                                            \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define SRAM_LSB_1_BASE_ADDR                  0x%07x\n",  `SRAM_LSB_1_BASE_ADDR<<2);                                              \
         $fwrite(c_reg_defines_fd, "#define SRAM_LSB_2_BASE_ADDR                  0x%07x\n\n",  `SRAM_LSB_2_BASE_ADDR<<2);                                            \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define SRAM_MSB_SRAM1_RD_REG                 0x%07x\n",  `SRAM_MSB_SRAM1_RD_REG<<2);                                             \
         $fwrite(c_reg_defines_fd, "#define SRAM_MSB_SRAM1_WR_REG                 0x%07x\n",  `SRAM_MSB_SRAM1_WR_REG<<2);                                             \
         $fwrite(c_reg_defines_fd, "#define SRAM_MSB_SRAM2_RD_REG                 0x%07x\n",  `SRAM_MSB_SRAM2_RD_REG<<2);                                             \
         $fwrite(c_reg_defines_fd, "#define SRAM_MSB_SRAM2_WR_REG                 0x%07x\n\n",  `SRAM_MSB_SRAM2_WR_REG<<2);                                           \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define SRAM_TEST_ERR_CNT_REG                 0x%07x\n",  `SRAM_TEST_ERR_CNT_REG<<2);                                             \
         $fwrite(c_reg_defines_fd, "#define SRAM_TEST_ITER_NUM_REG                0x%07x\n",  `SRAM_TEST_ITER_NUM_REG<<2);                                            \
         $fwrite(c_reg_defines_fd, "#define SRAM_TEST_BAD_RUNS_REG                0x%07x\n",  `SRAM_TEST_BAD_RUNS_REG<<2);                                            \
         $fwrite(c_reg_defines_fd, "#define SRAM_TEST_GOOD_RUNS_REG               0x%07x\n",  `SRAM_TEST_GOOD_RUNS_REG<<2);                                           \
         $fwrite(c_reg_defines_fd, "#define SRAM_TEST_STATUS_REG                  0x%07x\n",  `SRAM_TEST_STATUS_REG<<2);                                              \
         $fwrite(c_reg_defines_fd, "#define SRAM_TEST_EN_REG                      0x%07x\n",  `SRAM_TEST_EN_REG<<2);                                                  \
         $fwrite(c_reg_defines_fd, "#define SRAM_TEST_CTRL_REG                    0x%07x\n",  `SRAM_TEST_CTRL_REG<<2);                                                \
	 $fwrite(c_reg_defines_fd, "#define SRAM_TEST_RAND_SEED_1_REG             0x%07x\n",  `SRAM_TEST_RAND_SEED_1_REG<<2);                                         \
	 $fwrite(c_reg_defines_fd, "#define SRAM_TEST_RAND_SEED_2_REG             0x%07x\n\n",  `SRAM_TEST_RAND_SEED_2_REG<<2);                                       \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define SRAM_TEST_LOG_OFFSET                  0x%07x\n\n",  `SRAM_TEST_LOG_OFFSET<<2);                                            \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define SRAM_TEST_LOG_ADDR_REG                0x%07x\n",  `SRAM_TEST_LOG_ADDR_REG<<2);                                            \
         $fwrite(c_reg_defines_fd, "#define SRAM_TEST_LOG_EXP_DATA_HI_REG         0x%07x\n",  `SRAM_TEST_LOG_EXP_DATA_HI_REG<<2);                                     \
         $fwrite(c_reg_defines_fd, "#define SRAM_TEST_LOG_EXP_DATA_LO_REG         0x%07x\n",  `SRAM_TEST_LOG_EXP_DATA_LO_REG<<2);                                     \
         $fwrite(c_reg_defines_fd, "#define SRAM_TEST_LOG_RD_DATA_HI_REG          0x%07x\n",  `SRAM_TEST_LOG_RD_DATA_HI_REG<<2);                                      \
         $fwrite(c_reg_defines_fd, "#define SRAM_TEST_LOG_RD_DATA_LO_REG          0x%07x\n\n",  `SRAM_TEST_LOG_RD_DATA_LO_REG<<2);                                    \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define DRAM_TEST_ERR_CNT_REG                 0x%07x\n",  `DRAM_TEST_ERR_CNT_REG<<2);                                             \
         $fwrite(c_reg_defines_fd, "#define DRAM_TEST_ITER_NUM_REG                0x%07x\n",  `DRAM_TEST_ITER_NUM_REG<<2);                                            \
         $fwrite(c_reg_defines_fd, "#define DRAM_TEST_BAD_RUNS_REG                0x%07x\n",  `DRAM_TEST_BAD_RUNS_REG<<2);                                            \
         $fwrite(c_reg_defines_fd, "#define DRAM_TEST_GOOD_RUNS_REG               0x%07x\n",  `DRAM_TEST_GOOD_RUNS_REG<<2);                                           \
         $fwrite(c_reg_defines_fd, "#define DRAM_TEST_STATUS_REG                  0x%07x\n",  `DRAM_TEST_STATUS_REG<<2);                                              \
         $fwrite(c_reg_defines_fd, "#define DRAM_TEST_EN_REG                      0x%07x\n",  `DRAM_TEST_EN_REG<<2);                                                  \
         $fwrite(c_reg_defines_fd, "#define DRAM_TEST_CTRL_REG                    0x%07x\n",  `DRAM_TEST_CTRL_REG<<2);                                                \
	 $fwrite(c_reg_defines_fd, "#define DRAM_TEST_RAND_SEED_REG               0x%07x\n\n",  `DRAM_TEST_RAND_SEED_REG<<2);                                         \
                                                                                                                                                                      \
	 $fwrite(c_reg_defines_fd, "#define DRAM_TEST_LOG_OFFSET                  0x%07x\n\n",  `DRAM_TEST_LOG_OFFSET<<2);                                            \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define DRAM_TEST_LOG_ADDR_REG                0x%07x\n",  `DRAM_TEST_LOG_ADDR_REG<<2);                                            \
         $fwrite(c_reg_defines_fd, "#define DRAM_TEST_LOG_EXP_DATA_HI_REG         0x%07x\n",  `DRAM_TEST_LOG_EXP_DATA_HI_REG<<2);                                     \
         $fwrite(c_reg_defines_fd, "#define DRAM_TEST_LOG_EXP_DATA_LO_REG         0x%07x\n",  `DRAM_TEST_LOG_EXP_DATA_LO_REG<<2);                                     \
         $fwrite(c_reg_defines_fd, "#define DRAM_TEST_LOG_RD_DATA_HI_REG          0x%07x\n",  `DRAM_TEST_LOG_RD_DATA_HI_REG<<2);                                      \
         $fwrite(c_reg_defines_fd, "#define DRAM_TEST_LOG_RD_DATA_LO_REG          0x%07x\n\n",  `DRAM_TEST_LOG_RD_DATA_LO_REG<<2);                                    \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PORT_OFFSET                  0x%07x\n\n", `PHY_TEST_PORT_OFFSET<<2);                                             \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_STATUS_REG                   0x%07x\n", `PHY_TEST_STATUS_REG<<2);                                                \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_CTRL_REG                     0x%07x\n", `PHY_TEST_CTRL_REG<<2);                                                  \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_SIZE_REG                     0x%07x\n", `PHY_TEST_SIZE_REG<<2);                                                  \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PATTERN_REG                  0x%07x\n", `PHY_TEST_PATTERN_REG<<2);                                               \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_INIT_SEQ_NO_REG              0x%07x\n\n", `PHY_TEST_INIT_SEQ_NO_REG<<2);                                         \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_0_TX_STATUS_REG          0x%07x\n", `PHY_TEST_PHY_0_TX_STATUS_REG<<2);                                       \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_0_TX_ITER_CNT_REG        0x%07x\n", `PHY_TEST_PHY_0_TX_ITER_CNT_REG<<2);                                     \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_0_TX_PKT_CNT_REG         0x%07x\n", `PHY_TEST_PHY_0_TX_PKT_CNT_REG<<2);                                      \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_0_TX_SEQ_NO_REG          0x%07x\n", `PHY_TEST_PHY_0_TX_SEQ_NO_REG<<2);                                       \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_0_TX_RAND_SEED_REG       0x%07x\n", `PHY_TEST_PHY_0_TX_RAND_SEED_REG<<2);                                    \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_0_RX_STATUS_REG          0x%07x\n", `PHY_TEST_PHY_0_RX_STATUS_REG<<2);                                       \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_0_RX_GOOD_PKT_CNT_REG    0x%07x\n", `PHY_TEST_PHY_0_RX_GOOD_PKT_CNT_REG<<2);                                 \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_0_RX_ERR_PKT_CNT_REG     0x%07x\n", `PHY_TEST_PHY_0_RX_ERR_PKT_CNT_REG<<2);                                  \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_0_RX_SEQ_NO_REG          0x%07x\n", `PHY_TEST_PHY_0_RX_SEQ_NO_REG<<2);                                       \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_0_RX_CTRL_REG            0x%07x\n", `PHY_TEST_PHY_0_RX_CTRL_REG<<2);                                         \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_0_RX_LOG_STATUS_REG      0x%07x\n", `PHY_TEST_PHY_0_RX_LOG_STATUS_REG<<2);                                   \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_0_RX_LOG_EXP_DATA_REG    0x%07x\n", `PHY_TEST_PHY_0_RX_LOG_EXP_DATA_REG<<2);                                 \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_0_RX_LOG_RX_DATA_REG     0x%07x\n", `PHY_TEST_PHY_0_RX_LOG_RX_DATA_REG<<2);                                  \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_0_RX_LOG_CTRL_REG        0x%07x\n\n", `PHY_TEST_PHY_0_RX_LOG_CTRL_REG<<2);                                   \
                                                                                                                                                                      \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_1_TX_STATUS_REG          0x%07x\n", `PHY_TEST_PHY_1_TX_STATUS_REG<<2);                                       \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_1_TX_ITER_CNT_REG        0x%07x\n", `PHY_TEST_PHY_1_TX_ITER_CNT_REG<<2);                                     \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_1_TX_PKT_CNT_REG         0x%07x\n", `PHY_TEST_PHY_1_TX_PKT_CNT_REG<<2);                                      \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_1_TX_SEQ_NO_REG          0x%07x\n", `PHY_TEST_PHY_1_TX_SEQ_NO_REG<<2);                                       \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_1_TX_RAND_SEED_REG       0x%07x\n", `PHY_TEST_PHY_1_TX_RAND_SEED_REG<<2);                                    \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_1_RX_STATUS_REG          0x%07x\n", `PHY_TEST_PHY_1_RX_STATUS_REG<<2);                                       \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_1_RX_GOOD_PKT_CNT_REG    0x%07x\n", `PHY_TEST_PHY_1_RX_GOOD_PKT_CNT_REG<<2);                                 \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_1_RX_ERR_PKT_CNT_REG     0x%07x\n", `PHY_TEST_PHY_1_RX_ERR_PKT_CNT_REG<<2);                                  \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_1_RX_SEQ_NO_REG          0x%07x\n", `PHY_TEST_PHY_1_RX_SEQ_NO_REG<<2);                                       \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_1_RX_CTRL_REG            0x%07x\n", `PHY_TEST_PHY_1_RX_CTRL_REG<<2);                                         \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_1_RX_LOG_STATUS_REG      0x%07x\n", `PHY_TEST_PHY_1_RX_LOG_STATUS_REG<<2);                                   \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_1_RX_LOG_EXP_DATA_REG    0x%07x\n", `PHY_TEST_PHY_1_RX_LOG_EXP_DATA_REG<<2);                                 \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_1_RX_LOG_RX_DATA_REG     0x%07x\n", `PHY_TEST_PHY_1_RX_LOG_RX_DATA_REG<<2);                                  \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_1_RX_LOG_CTRL_REG        0x%07x\n\n", `PHY_TEST_PHY_1_RX_LOG_CTRL_REG<<2);                                   \
                                                                                                                                                                      \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_2_TX_STATUS_REG          0x%07x\n", `PHY_TEST_PHY_2_TX_STATUS_REG<<2);                                       \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_2_TX_ITER_CNT_REG        0x%07x\n", `PHY_TEST_PHY_2_TX_ITER_CNT_REG<<2);                                     \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_2_TX_PKT_CNT_REG         0x%07x\n", `PHY_TEST_PHY_2_TX_PKT_CNT_REG<<2);                                      \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_2_TX_SEQ_NO_REG          0x%07x\n", `PHY_TEST_PHY_2_TX_SEQ_NO_REG<<2);                                       \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_2_TX_RAND_SEED_REG       0x%07x\n", `PHY_TEST_PHY_2_TX_RAND_SEED_REG<<2);                                    \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_2_RX_STATUS_REG          0x%07x\n", `PHY_TEST_PHY_2_RX_STATUS_REG<<2);                                       \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_2_RX_GOOD_PKT_CNT_REG    0x%07x\n", `PHY_TEST_PHY_2_RX_GOOD_PKT_CNT_REG<<2);                                 \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_2_RX_ERR_PKT_CNT_REG     0x%07x\n", `PHY_TEST_PHY_2_RX_ERR_PKT_CNT_REG<<2);                                  \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_2_RX_SEQ_NO_REG          0x%07x\n", `PHY_TEST_PHY_2_RX_SEQ_NO_REG<<2);                                       \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_2_RX_CTRL_REG            0x%07x\n", `PHY_TEST_PHY_2_RX_CTRL_REG<<2);                                         \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_2_RX_LOG_STATUS_REG      0x%07x\n", `PHY_TEST_PHY_2_RX_LOG_STATUS_REG<<2);                                   \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_2_RX_LOG_EXP_DATA_REG    0x%07x\n", `PHY_TEST_PHY_2_RX_LOG_EXP_DATA_REG<<2);                                 \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_2_RX_LOG_RX_DATA_REG     0x%07x\n", `PHY_TEST_PHY_2_RX_LOG_RX_DATA_REG<<2);                                  \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_2_RX_LOG_CTRL_REG        0x%07x\n\n", `PHY_TEST_PHY_2_RX_LOG_CTRL_REG<<2);                                   \
                                                                                                                                                                      \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_3_TX_STATUS_REG          0x%07x\n", `PHY_TEST_PHY_3_TX_STATUS_REG<<2);                                       \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_3_TX_ITER_CNT_REG        0x%07x\n", `PHY_TEST_PHY_3_TX_ITER_CNT_REG<<2);                                     \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_3_TX_PKT_CNT_REG         0x%07x\n", `PHY_TEST_PHY_3_TX_PKT_CNT_REG<<2);                                      \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_3_TX_SEQ_NO_REG          0x%07x\n", `PHY_TEST_PHY_3_TX_SEQ_NO_REG<<2);                                       \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_3_TX_RAND_SEED_REG       0x%07x\n", `PHY_TEST_PHY_3_TX_RAND_SEED_REG<<2);                                    \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_3_RX_STATUS_REG          0x%07x\n", `PHY_TEST_PHY_3_RX_STATUS_REG<<2);                                       \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_3_RX_GOOD_PKT_CNT_REG    0x%07x\n", `PHY_TEST_PHY_3_RX_GOOD_PKT_CNT_REG<<2);                                 \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_3_RX_ERR_PKT_CNT_REG     0x%07x\n", `PHY_TEST_PHY_3_RX_ERR_PKT_CNT_REG<<2);                                  \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_3_RX_SEQ_NO_REG          0x%07x\n", `PHY_TEST_PHY_3_RX_SEQ_NO_REG<<2);                                       \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_3_RX_CTRL_REG            0x%07x\n", `PHY_TEST_PHY_3_RX_CTRL_REG<<2);                                         \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_3_RX_LOG_STATUS_REG      0x%07x\n", `PHY_TEST_PHY_3_RX_LOG_STATUS_REG<<2);                                   \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_3_RX_LOG_EXP_DATA_REG    0x%07x\n", `PHY_TEST_PHY_3_RX_LOG_EXP_DATA_REG<<2);                                 \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_3_RX_LOG_RX_DATA_REG     0x%07x\n", `PHY_TEST_PHY_3_RX_LOG_RX_DATA_REG<<2);                                  \
         $fwrite(c_reg_defines_fd, "#define PHY_TEST_PHY_3_RX_LOG_CTRL_REG        0x%07x\n\n", `PHY_TEST_PHY_3_RX_LOG_CTRL_REG<<2);                                   \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define REG_FILE_BASE_ADDR_REG              0x%07x\n\n",  `REG_FILE_BASE_ADDR<<2);                                                \
                                                                                                                                                                      \
         $fwrite(c_reg_defines_fd, "#define SRAM_BASE_ADDR                      0x%07x\n",  {`SRAM_BASE_ADDR, 2'b00});                                                \
         $fwrite(c_reg_defines_fd, "#define DRAM_BASE_ADDR                      0x%07x\n\n",  {`DRAM_BASE_ADDR, 2'b00})



 `include "udp_defines.v"

`endif //  `ifndef _NF21_DEFINES_
